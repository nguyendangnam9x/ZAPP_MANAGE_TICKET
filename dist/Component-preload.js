/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "solman/Component-preload",
	"modules": {
		"solman/controller/EditEntity.controller.js": "sap.ui.define([\n\t\"solman/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/m/MessageBox\",\n\t\"sap/m/ObjectMarker\",\n\t\"sap/ui/core/format/FileSizeFormat\",\n\t\"sap/m/UploadCollectionParameter\",\n\t\"sap/m/MessageToast\",\n\t\"sap/m/library\"\n], function(BaseController, JSONModel, MessageBox, ObjectMarker, FileSizeFormat, UploadCollectionParameter, MessageToast, MobileLibrary) {\n\t\"use strict\";\n\tvar GFile = []; // Array global list file\n\treturn BaseController.extend(\"solman.controller.EditEntity\", {\n\t\tguiId: 0, // Guid edit\n\t\tisFirstTime: true, // Variable first time to initial GFile\n\t\tonInit: function() {\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\n\n\t\t\tthis.getView().setModel(new JSONModel({\n\t\t\t\t// \"maximumFilenameLength\": 55,\n\t\t\t\t\"maximumFileSize\": 1000,\n\t\t\t\t\"mode\": MobileLibrary.ListMode.SingleSelectMaster,\n\t\t\t\t\"uploadEnabled\": true,\n\t\t\t\t\"uploadButtonVisible\": true,\n\t\t\t\t\"enableEdit\": true,\n\t\t\t\t\"enableDelete\": true,\n\t\t\t\t\"visibleEdit\": true,\n\t\t\t\t\"visibleDelete\": true,\n\t\t\t\t\"listSeparatorItems\": [\n\t\t\t\t\tMobileLibrary.ListSeparators.All,\n\t\t\t\t\tMobileLibrary.ListSeparators.None\n\t\t\t\t],\n\t\t\t\t\"showSeparators\": MobileLibrary.ListSeparators.All,\n\t\t\t\t\"listModeItems\": [{\n\t\t\t\t\t\"key\": MobileLibrary.ListMode.SingleSelectMaster,\n\t\t\t\t\t\"text\": \"Single\"\n\t\t\t\t}, {\n\t\t\t\t\t\"key\": MobileLibrary.ListMode.MultiSelect,\n\t\t\t\t\t\"text\": \"Multi\"\n\t\t\t\t}]\n\t\t\t}), \"settings\");\n\t\t\t\n\t\t\t// Set model file types to check upload\n\t\t\tthis.getView().setModel(new JSONModel({\n\t\t\t\t\"items\": [\"pdf\", \"doc\", \"docx\", \"xls\", \"xlsx\", \"rar\", \"zip\"],\n\t\t\t\t\"selected\": [\"pdf\", \"doc\", \"docx\", \"xls\", \"xlsx\", \"rar\", \"zip\"]\n\t\t\t}), \"fileTypes\");\n\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.setModel(oViewModel, \"edit\");\n\t\t\tthis.getRouter().getRoute(\"edit\").attachPatternMatched(this._onObjectMatched, this);\n\t\t\tthis.byId(\"UploadCollection\").addEventDelegate({\n\t\t\t\tonBeforeRendering: function() {\n\t\t\t\t\tthis.byId(\"attachmentTitle\").setText(this.getAttachmentTitleText());\n\t\t\t\t}.bind(this)\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Change mode edit or display\n\t\t * */\n\t\tonChangeMode: function(oEvent) {\n\t\t\tif (oEvent.getSource().getState()) {\n\t\t\t\tif (this.getView().byId(\"status\").getSelectedKey() === \"E0008\") {\n\t\t\t\t\tthis.getView().byId(\"switchMode\").setState(false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.onChangeTicket(oEvent);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.onDisplay(oEvent);\n\t\t\t}\n\t\t},\n\n\t\tonCancel: function() {\n\t\t\tif (this.getView().byId(\"switchMode\").getState()) {\n\t\t\t\tthis._showConfirmQuitChanges();\n\t\t\t} else {\n\t\t\t\tthis._resetDefaultVal();\n\t\t\t\tthis.onDisplay(null);\n\t\t\t\tthis._navBack();\n\t\t\t}\n\t\t},\n\t\t_showConfirmQuitChanges: function() {\n\t\t\tvar oComponent = this.getOwnerComponent();\n\t\t\tvar that = this;\n\t\t\tMessageBox.confirm(this._oResourceBundle.getText(\"confirmCancelMessage\"), {\n\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\n\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\n\t\t\t\t\t\tthat._resetDefaultVal();\n\t\t\t\t\t\tthat.onDisplay(null);\n\t\t\t\t\t\tthat._navBack();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_resetDefaultVal: function() {\n\t\t\tthis.getView().byId(\"switchMode\").setState(false);\n\t\t\tvar oModel = this.getOwnerComponent().getModel();\n\t\t\toModel.resetChanges();\n\t\t},\n\t\t_navBack: function() {\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\n\t\t\t\tthis.getView().unbindObject();\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t\t}\n\t\t},\n\t\t\n\t\tonHome: function(){\n\t\t\tthis._resetDefaultVal();\n\t\t\tthis.onDisplay(null);\n\t\t\tthis.getRouter().getTargets().display(\"object\");\t\n\t\t},\n\t\t\n\t\tonUpload: function(oEvent) {\n\t\t\tvar oUploadCollection = oEvent.getSource();\n\t\t\tvar oCustomerHeaderToken = new sap.m.UploadCollectionParameter({\n\t\t\t\tname: \"x-csrf-token\",\n\t\t\t\tvalue: \"securityTokenFromModel\"\n\t\t\t});\n\t\t\toUploadCollection.addHeaderParameter(oCustomerHeaderToken);\n\t\t\tvar uploadAttachment = this.getView().byId(\"UploadCollection\");\n\n\t\t\tfunction getFileInfo(file) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.readAsDataURL(file);\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tGFile.unshift({\n\t\t\t\t\t\tMime: file.type.toString(),\n\t\t\t\t\t\tExtention: file.name.split(\".\")[1].toString(),\n\t\t\t\t\t\tLength: file.size.toString(),\n\t\t\t\t\t\tNameFile: file.name.toString(),\n\t\t\t\t\t\tContent: reader.result.split(\",\")[1].toString()\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < oEvent.getParameter(\"files\").length; i++) {\n\t\t\t\tvar oFileTemp = oEvent.getParameter(\"files\")[i];\n\t\t\t\tif (uploadAttachment.getItems().length > 0) {\n\t\t\t\t\tfor (var j = 0; j < uploadAttachment.getItems().length; j++) {\n\t\t\t\t\t\tif (oFileTemp.name === uploadAttachment.getItems()[j].getProperty(\"fileName\")) {\n\t\t\t\t\t\t\t// Do nothing. Same name file is not allow\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgetFileInfo(oFileTemp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tgetFileInfo(oFileTemp);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonFileDeleted: function(oEvent) {\n\t\t\tthis.deleteItemById(oEvent.getParameter(\"documentId\"));\n\t\t},\n\n\t\tdeleteItemById: function(sItemToDeleteId) {\n\t\t\tvar oUploadCollection = this.byId(\"UploadCollection\");\n\t\t\tvar listItems = oUploadCollection.getItems();\n\t\t\tvar fileName = \"\";\n\n\t\t\tfor (var i = 0; i < listItems.length; i++) {\n\t\t\t\tif (listItems[i].getProperty(\"documentId\") === sItemToDeleteId) {\n\t\t\t\t\tfileName = listItems[i].getProperty(\"fileName\");\n\t\t\t\t\toUploadCollection.removeItem(listItems[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tjQuery.each(GFile, function(index) {\n\t\t\t\tif (fileName !== \"\" && GFile[index] && GFile[index].NameFile === fileName) {\n\t\t\t\t\tGFile.splice(index, 1);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.byId(\"attachmentTitle\").setText(this.getAttachmentTitleText());\n\t\t},\n\n\t\tonFilenameLengthExceed: function() {},\n\n\t\tonFileRenamed: function(oEvent) {\n\t\t\t// var oData = this.byId(\"UploadCollection\").getModel().getData();\n\t\t\t// var aItems = jQuery.extend(true, {}, oData).items;\n\t\t\t// var sDocumentId = oEvent.getParameter(\"documentId\");\n\t\t\t// jQuery.each(aItems, function(index) {\n\t\t\t// \tif (aItems[index] && aItems[index].documentId === sDocumentId) {\n\t\t\t// \t\taItems[index].fileName = oEvent.getParameter(\"item\").getFileName();\n\t\t\t// \t}\n\t\t\t// });\n\t\t\t// this.byId(\"UploadCollection\").getModel().setData({\n\t\t\t// \t\"items\": aItems\n\t\t\t// });\n\t\t},\n\n\t\tonFileSizeExceed: function() {\n\t\t\tMessageBox.error(this._oResourceBundle.getText(\"msg_file_maxsize\"));\n\t\t},\n\n\t\tonTypeMissmatch: function() {\n\t\t\tMessageBox.error(this._oResourceBundle.getText(\"msg_file_extension_error\"));\n\t\t},\n\n\t\tonUploadComplete: function(oEvent) {\n\t\t\tvar oItem = {};\n\t\t\tvar sUploadedFile = oEvent.getParameter(\"files\")[0].fileName;\n\t\t\t// at the moment parameter fileName is not set in IE9\n\t\t\tif (!sUploadedFile) {\n\t\t\t\tvar aUploadedFile = (oEvent.getParameters().getSource().getProperty(\"value\")).split(/\\\" \"/);\n\t\t\t\tsUploadedFile = aUploadedFile[0];\n\t\t\t}\n\t\t\toItem = {\n\t\t\t\t\"fileName\": sUploadedFile,\n\t\t\t\t\"documentId\": jQuery.now().toString(),\n\t\t\t\t\"visibleEdit\": false\n\t\t\t};\n\n\t\t\tvar newItem = new sap.m.UploadCollectionItem(oItem);\n\t\t\tthis.getView().byId(\"UploadCollection\").addItem(newItem);\n\t\t},\n\n\t\tonBeforeUploadStarts: function(oEvent) {\n\t\t\t// Header Slug\n\t\t\tvar oCustomerHeaderSlug = new UploadCollectionParameter({\n\t\t\t\tname: \"slug\",\n\t\t\t\tvalue: oEvent.getParameter(\"fileName\")\n\t\t\t});\n\t\t\toEvent.getParameters().addHeaderParameter(oCustomerHeaderSlug);\n\t\t\t// MessageToast.show(\"BeforeUploadStarts event triggered.\");\n\t\t},\n\n\t\tonUploadTerminated: function() {\n\n\t\t},\n\n\t\tonSelectAllPress: function(oEvent) {\n\t\t\tvar oUploadCollection = this.byId(\"UploadCollection\");\n\t\t\tif (!oEvent.getSource().getPressed()) {\n\t\t\t\tthis.deselectAllItems(oUploadCollection);\n\t\t\t\toEvent.getSource().setPressed(false);\n\t\t\t\toEvent.getSource().setText(\"Select all\");\n\t\t\t} else {\n\t\t\t\tthis.deselectAllItems(oUploadCollection);\n\t\t\t\toUploadCollection.selectAll();\n\t\t\t\toEvent.getSource().setPressed(true);\n\t\t\t\toEvent.getSource().setText(\"Deselect all\");\n\t\t\t}\n\t\t\tthis.onSelectionChange(oEvent);\n\t\t},\n\n\t\tdeselectAllItems: function(oUploadCollection) {\n\t\t\tvar aItems = oUploadCollection.getItems();\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\n\t\t\t\toUploadCollection.setSelectedItem(aItems[i], false);\n\t\t\t}\n\t\t},\n\n\t\tgetAttachmentTitleText: function() {\n\t\t\tvar aItems = this.byId(\"UploadCollection\").getItems();\n\t\t\treturn \"Attachments (\" + aItems.length + \")\";\n\t\t},\n\n\t\tonSelectionChange: function() {\n\t\t\tvar oUploadCollection = this.byId(\"UploadCollection\");\n\t\t\t// Only it is enabled if there is a selected item in multi-selection mode\n\t\t\tif (oUploadCollection.getMode() === MobileLibrary.ListMode.MultiSelect) {\n\t\t\t\tif (oUploadCollection.getSelectedItems().length > 0) {\n\t\t\t\t\tthis.byId(\"deleteSelectedButton\").setEnabled(true);\n\t\t\t\t} else {\n\t\t\t\t\tthis.byId(\"deleteSelectedButton\").setEnabled(false);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonOpenAppSettings: function(oEvent) {\n\t\t\tif (!this.oSettingsDialog) {\n\t\t\t\tthis.oSettingsDialog = sap.ui.xmlfragment(\"sap.m.sample.UploadCollection.AppSettings\", this);\n\t\t\t\tthis.getView().addDependent(this.oSettingsDialog);\n\t\t\t}\n\t\t\tjQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), this.oSettingsDialog);\n\t\t\tthis.oSettingsDialog.open();\n\t\t},\n\n\t\tonDialogCloseButton: function() {\n\t\t\tthis.oSettingsDialog.close();\n\t\t},\n\n\t\t_onObjectMatched: function(oEvent) {\n\t\t\tthis.onDisplay(oEvent);\n\t\t\tvar oParameter = oEvent.getParameter(\"arguments\").Guid;\n\t\t\tthis.guiId = oParameter;\n\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\tthis.getView().byId(\"page\").bindElement({\n\t\t\t\t\tpath: \"/ItemSet(Guid='\" + oParameter + \"')\"\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t},\n\n\t\tonDisplay: function(oEvent) {\n\t\t\tthis.getView().byId(\"description\").setEnabled(false);\n\t\t\tthis.getView().byId(\"priority\").setEnabled(false);\n\t\t\tthis.getView().byId(\"impact\").setEnabled(false);\n\t\t\t// this.getView().byId(\"status\").setEnabled(false);\n\t\t\tthis.getView().byId(\"text_description\").setEnabled(false);\n\t\t\tthis.getView().byId(\"comment\").setEnabled(false);\n\t\t\tthis.getView().byId(\"save\").setEnabled(false);\n\t\t\tthis.getView().byId(\"cancel\").setEnabled(false);\n\t\t\tvar items = this.getView().byId(\"UploadCollection\").getItems();\n\t\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\t\titems[i].setEnableDelete(false);\n\t\t\t}\n\t\t\tthis.getView().byId(\"UploadCollection\").setUploadButtonInvisible(true);\n\t\t\tthis.getView().byId(\"switchMode\").setState(false);\n\t\t\t// this.getView().byId(\"btnDownloadSelected\").setEnabled(false);\n\t\t},\n\n\t\tonChangeTicket: function(oEvent) {\n\t\t\tthis.getView().byId(\"description\").setEnabled(true);\n\t\t\tthis.getView().byId(\"priority\").setEnabled(true);\n\t\t\tthis.getView().byId(\"impact\").setEnabled(true);\n\t\t\t// this.getView().byId(\"status\").setEnabled(true);\n\t\t\tthis.getView().byId(\"text_description\").setEnabled(true);\n\t\t\tthis.getView().byId(\"comment\").setEnabled(true);\n\t\t\tthis.getView().byId(\"save\").setEnabled(true);\n\t\t\tthis.getView().byId(\"cancel\").setEnabled(true);\n\t\t\tthis.getView().byId(\"UploadCollection\").setUploadButtonInvisible(false);\n\t\t\t// this.getView().byId(\"btnDownloadSelected\").setEnabled(true);\n\t\t\tvar items = this.getView().byId(\"UploadCollection\").getItems();\n\t\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\t\titems[i].setEnableDelete(true);\n\t\t\t}\n\t\t\tthis._initGFile();\n\t\t},\n\n\t\t_initGFile: function() {\n\t\t\tif (this.isFirstTime) {\n\t\t\t\tGFile = [];\n\t\t\t\tthis.isFirstTime = false;\n\t\t\t\tvar oUploadCollection = this.getView().byId(\"UploadCollection\");\n\t\t\t\tvar items = oUploadCollection.getItems();\n\t\t\t\tif (items.length > 0) {\n\t\t\t\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\t\t\t\tvar IdAtt = items[i].getBindingContext().getObject(\"IdAtt\");\n\t\t\t\t\t\tvar IdTicket = items[i].getBindingContext().getObject(\"IdTicket\");\n\t\t\t\t\t\tvar NameFile = items[i].getBindingContext().getObject(\"NameFile\");\n\t\t\t\t\t\tvar Length = items[i].getBindingContext().getObject(\"Length\");\n\t\t\t\t\t\tvar Extention = items[i].getBindingContext().getObject(\"Extention\");\n\t\t\t\t\t\tvar Mime = items[i].getBindingContext().getObject(\"Mime\");\n\t\t\t\t\t\tvar Content = items[i].getBindingContext().getObject(\"Content\");\n\n\t\t\t\t\t\tGFile.unshift({\n\t\t\t\t\t\t\tIdAtt: IdAtt,\n\t\t\t\t\t\t\tIdTicket: IdTicket,\n\t\t\t\t\t\t\tNameFile: NameFile,\n\t\t\t\t\t\t\tLength: Length,\n\t\t\t\t\t\t\tExtention: Extention,\n\t\t\t\t\t\t\tMime: Mime,\n\t\t\t\t\t\t\tContent: Content\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonDownload: function(oEvt) {\n\t\t\t// Khoi tao GFile khi user nhấn button Download\n\t\t\tthis._initGFile();\n\n\t\t\tvar oUploadCollection = this.getView().byId(\"UploadCollection\");\n\t\t\tvar aSelectedItems = oUploadCollection.getSelectedItems();\n\t\t\tif (aSelectedItems.length > 0) {\n\t\t\t\tfor (var i = 0; i < aSelectedItems.length; i++) {\n\t\t\t\t\t// var oValueDecode = aSelectedItems[i].getBindingContext().getObject(\"Content\");\n\t\t\t\t\t// var oFilenameDecode = aSelectedItems[i].getBindingContext().getObject(\"NameFile\");\n\t\t\t\t\tvar oFilenameDecode = aSelectedItems[i].getProperty(\"fileName\");\n\t\t\t\t\tvar oValueDecode = \"\";\n\t\t\t\t\tfor (var j = 0; j < GFile.length; j++) {\n\t\t\t\t\t\tif (GFile[j].NameFile === oFilenameDecode) {\n\t\t\t\t\t\t\toValueDecode = GFile[j].Content;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar oElement = document.createElement(\"a\");\n\t\t\t\t\toElement.setAttribute(\"href\", \"data:application/octet-stream;charset=utf-8;base64,\" + oValueDecode);\n\t\t\t\t\toElement.setAttribute(\"download\", oFilenameDecode);\n\t\t\t\t\toElement.style.display = \"none\";\n\t\t\t\t\toElement.click();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tMessageBox.information(\"Select an item to download\");\n\t\t\t}\n\t\t},\n\n\t\tonNavBack: function() {\n\t\t\tthis.onCancel();\n\t\t},\n\n\t\tonSave: function(oEvent) {\n\t\t\tvar that = this;\n\t\t\tvar sUrl = \"/sap/opu/odata/sap/ZODATA_FIORI_SOL_SRV/\";\n\t\t\tvar oDataModel = new sap.ui.model.odata.v2.ODataModel(sUrl, {\n\t\t\t\tjson: true,\n\t\t\t\tloadMetadataAsync: true\n\t\t\t});\n\n\t\t\tvar description = this.getView().byId(\"description\").getValue();\n\t\t\tvar priority = this.getView().byId(\"priority\").getSelectedKey();\n\t\t\tvar impact = this.getView().byId(\"impact\").getSelectedKey();\n\t\t\t// var status = this.getView().byId(\"status\").getSelectedKey();\n\t\t\tvar textDescription = this.getView().byId(\"text_description\").getValue();\n\t\t\tvar comment = this.getView().byId(\"comment\").getValue();\n\n\t\t\tif (description === \"\") {\n\t\t\t\tMessageBox.warning(this._oResourceBundle.getText(\"description_required\"));\n\t\t\t}\n\n\t\t\tvar oEntry = {};\n\n\t\t\toEntry.Guid = this.guiId; // Model update\n\t\t\toEntry.Priority = priority;\n\t\t\toEntry.Impact = impact;\n\t\t\toEntry.Description = description;\n\t\t\t// oEntry.Status = status;\n\t\t\toEntry.TextDescription = textDescription;\n\t\t\toEntry.Comment = comment;\n\t\t\toEntry.ToAttachSet = GFile;\n\n\t\t\tsap.ui.core.BusyIndicator.show();\n\n\t\t\toDataModel.create(\"/ItemSet\", oEntry, {\n\t\t\t\tsuccess: function(oData, response) {\n\t\t\t\t\tsap.ui.core.BusyIndicator.hide();\n\t\t\t\t\tif (oData.TicketId !== \"\") {\n\t\t\t\t\t\tMessageBox.success(that._oResourceBundle.getText(\"msg_update_success\"), {\n\t\t\t\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\t\t\t\tthat.onDisplay(null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tMessageBox.success(this._oResourceBundle.getText(\"msg_update_error\"));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: function(oError) {\n\t\t\t\t\tsap.ui.core.BusyIndicator.hide();\n\t\t\t\t\tMessageBox.error(oError.statusText);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n});",
		"solman/controller/Home.controller.js": "/*global location */\nsap.ui.define([\n\t\"solman/controller/BaseController\",\n\t\"sap/m/TablePersoController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"./TablePersoService\",\n\t\"sap/m/MessageBox\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/ui/model/Filter\"\n], function(BaseController, TablePersoController, JSONModel, TablePersoService, MessageBox, FilterOperator, Filter) {\n\t\"use strict\";\n\treturn BaseController.extend(\"solman.controller.Home\", {\n\t\tpageNumber: 1,\n\t\tpageMax: 0,\n\t\ttotalRecord: 0,\n\t\ttotalOpen: 0,\n\t\ttotalClose: 0,\n\t\tautoRefresh: null,\n\t\tonInit: function() {\n\t\t\tsap.ushell.Container.getRenderer(\"fiori2\").hideHeaderItem(\"backBtn\", false);\n\t\t\tthis._oTPC = new TablePersoController({\n\t\t\t\ttable: this.byId(\"table_list_ticket\"),\n\t\t\t\tcomponentName: \"ticketApp\",\n\t\t\t\tpersoService: TablePersoService\n\t\t\t}).activate();\n\t\t\tthis._searchTicket();\n\t\t},\n\t\tonNavBack: function(oEvent) {\n\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t},\n\t\tonPersoButtonPressed: function(oEvent) {\n\t\t\tthis._oTPC.openDialog();\n\t\t},\n\t\tonTablePersoRefresh: function() {\n\t\t\tthis._oTPC.refresh();\n\t\t},\n\t\tonCreate: function(oEvent) {\n\t\t\tvar oRouter = sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\toRouter.navTo(\"create\");\n\t\t},\n\t\tonEdit: function(oEvent) {\n\t\t\tvar route = sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\tvar guid = oEvent.getSource().getAggregation(\"customData\")[0].getBindingContext().getProperty(\"Guid\");\n\t\t\troute.navTo(\"edit\", {\n\t\t\t\tGuid: encodeURIComponent(guid)\n\t\t\t});\n\t\t},\n\t\tonMyTicket: function(oEvent) {\n\t\t\tvar oRouter = sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\toRouter.navTo(\"myticket\");\n\t\t},\n\t\tonChartPie: function(oEvent) {\n\t\t\tvar oVizFrame = this.oVizFrame = this.getView().byId(\"oVizFrame\");\n\t\t\toVizFrame.setVisible(!oVizFrame.getVisible());\n\t\t},\n\t\tonSearch: function(oEvent) {\n\t\t\tthis.pageNumber = 1;\n\t\t\tthis._searchTicket();\n\t\t},\n\t\tonNextPage: function(OEvent) {\n\t\t\tthis._enableAllButtonPage();\n\t\t\tthis.pageNumber = this.pageNumber + 1;\n\t\t\tif (this.pageNumber >= this.pageMax) {\n\t\t\t\tthis.pageNumber = this.pageMax;\n\t\t\t\tthis.getView().byId(\"btn_next_page\").setEnabled(false);\n\t\t\t\tthis.getView().byId(\"btn_last_page\").setEnabled(false);\n\t\t\t}\n\t\t\tthis._searchTicket();\n\t\t},\n\t\tonPrevPage: function(OEvent) {\n\t\t\tthis._enableAllButtonPage();\n\t\t\tthis.pageNumber = this.pageNumber - 1;\n\t\t\tif (this.pageNumber <= 1) {\n\t\t\t\tthis.pageNumber = 1;\n\t\t\t\tthis.getView().byId(\"btn_first_page\").setEnabled(false);\n\t\t\t\tthis.getView().byId(\"btn_prev_page\").setEnabled(false);\n\t\t\t}\n\t\t\tthis._searchTicket();\n\t\t},\n\t\tonFirstPage: function(OEvent) {\n\t\t\tthis._enableAllButtonPage();\n\t\t\tthis.pageNumber = 1;\n\t\t\tthis.getView().byId(\"btn_first_page\").setEnabled(false);\n\t\t\tthis.getView().byId(\"btn_prev_page\").setEnabled(false);\n\t\t\tthis._searchTicket();\n\t\t},\n\t\tonLastPage: function(OEvent) {\n\t\t\tthis._enableAllButtonPage();\n\t\t\tthis.pageNumber = this.pageMax;\n\t\t\tthis.getView().byId(\"btn_last_page\").setEnabled(false);\n\t\t\tthis.getView().byId(\"btn_next_page\").setEnabled(false);\n\t\t\tthis._searchTicket();\n\t\t},\n\t\tonUpdateFinishedAlegation: function(OEvent) {\n\t\t\tsap.ui.core.BusyIndicator.hide();\n\t\t\tthis._countItem();\n\t\t},\n\t\t_enableAllButtonPage: function() {\n\t\t\tthis._setEnableBtnPgae(true);\n\t\t},\n\t\t_disableAllButtonPage: function() {\n\t\t\tthis._setEnableBtnPgae(false);\n\t\t},\n\t\t_setEnableBtnPgae: function(isEnable) {\n\t\t\tthis.getView().byId(\"btn_first_page\").setEnabled(isEnable);\n\t\t\tthis.getView().byId(\"btn_prev_page\").setEnabled(isEnable);\n\t\t\tthis.getView().byId(\"btn_next_page\").setEnabled(isEnable);\n\t\t\tthis.getView().byId(\"btn_last_page\").setEnabled(isEnable);\n\t\t},\n\t\t_searchTicket: function() {\n\t\t\tsap.ui.core.BusyIndicator.show();\n\t\t\tvar sUrl = \"/sap/opu/odata/sap/ZODATA_FIORI_SOL_SRV/\";\n\t\t\tvar that = this;\n\n\t\t\tvar top = this.getView().byId(\"page_size\").getSelectedKey();\n\t\t\tvar skip = (this.pageNumber - 1) * top;\n\n\t\t\tvar idVal = this.getView().byId(\"search_field_assign\").getValue();\n\t\t\tvar transTypeVal = this.getView().byId(\"transaction_type\").getSelectedKey();\n\t\t\tvar statusVal = this.getView().byId(\"status\").getSelectedKey();\n\t\t\tvar priorityVal = this.getView().byId(\"priority\").getSelectedKey();\n\t\t\tvar dateFromVal = this.getView().byId(\"date_from\").getValue();\n\t\t\tvar dateToVal = this.getView().byId(\"date_to\").getValue();\n\t\t\tif (transTypeVal === \"all\") {\n\t\t\t\ttransTypeVal = \"\";\n\t\t\t}\n\t\t\tif (statusVal === \"all\") {\n\t\t\t\tstatusVal = \"\";\n\t\t\t}\n\t\t\tif (priorityVal === \"all\") {\n\t\t\t\tpriorityVal = \"\";\n\t\t\t}\n\t\t\tvar id = new sap.ui.model.Filter(\"TicketId\", sap.ui.model.FilterOperator.Contains, idVal);\n\t\t\tvar transType = new sap.ui.model.Filter(\"TransactionType\", sap.ui.model.FilterOperator.EQ, transTypeVal);\n\t\t\tvar status = new sap.ui.model.Filter(\"Status\", sap.ui.model.FilterOperator.EQ, statusVal);\n\t\t\tvar priority = new sap.ui.model.Filter(\"Priority\", sap.ui.model.FilterOperator.EQ, priorityVal);\n\t\t\tvar requestedStart = new sap.ui.model.Filter(\"RequestedStart\", sap.ui.model.FilterOperator.BT, dateFromVal, dateToVal);\n\t\t\tvar oDataModel = new sap.ui.model.odata.v2.ODataModel(sUrl, {\n\t\t\t\tjson: true,\n\t\t\t\tloadMetadataAsync: true\n\t\t\t});\n\t\t\toDataModel.read(\"/ItemSet\", {\n\t\t\t\tfilters: [id, transType, status, priority, requestedStart],\n\t\t\t\turlParameters: {\n\t\t\t\t\t\"$top\": top,\n\t\t\t\t\t\"$skip\": skip\n\t\t\t\t},\n\t\t\t\tsuccess: function(oData, response) {\n\t\t\t\t\tvar oTable = that.getView().byId(\"table_list_ticket\");\n\t\t\t\t\tvar oJSONModel = new sap.ui.model.json.JSONModel();\n\t\t\t\t\toJSONModel.setData(oData);\n\t\t\t\t\toTable.setModel(oJSONModel);\n\t\t\t\t\toTable.bindItems({\n\t\t\t\t\t\tpath: \"/results\",\n\t\t\t\t\t\ttemplate: oTable.getBindingInfo(\"items\").template\n\t\t\t\t\t});\n\t\t\t\t\tif (oData.results.length <= 0) {\n\t\t\t\t\t\tthat._disableAllButtonPage();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: function(oError) {\n\t\t\t\t\tMessageBox.error(oError.statusText);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_countItem: function() {\n\t\t\tsap.ui.core.BusyIndicator.show();\n\t\t\tvar sUrl = \"/sap/opu/odata/sap/ZODATA_FIORI_SOL_SRV/\";\n\t\t\tvar that = this;\n\n\t\t\tvar idVal = this.getView().byId(\"search_field_assign\").getValue();\n\t\t\tvar transTypeVal = this.getView().byId(\"transaction_type\").getSelectedKey();\n\t\t\tvar statusVal = this.getView().byId(\"status\").getSelectedKey();\n\t\t\tvar priorityVal = this.getView().byId(\"priority\").getSelectedKey();\n\t\t\tvar dateFromVal = this.getView().byId(\"date_from\").getValue();\n\t\t\tvar dateToVal = this.getView().byId(\"date_to\").getValue();\n\t\t\tif (transTypeVal === \"all\") {\n\t\t\t\ttransTypeVal = \"\";\n\t\t\t}\n\t\t\tif (statusVal === \"all\") {\n\t\t\t\tstatusVal = \"\";\n\t\t\t}\n\t\t\tif (priorityVal === \"all\") {\n\t\t\t\tpriorityVal = \"\";\n\t\t\t}\n\t\t\tvar id = new sap.ui.model.Filter(\"TicketId\", sap.ui.model.FilterOperator.Contains, idVal);\n\t\t\tvar transType = new sap.ui.model.Filter(\"TransactionType\", sap.ui.model.FilterOperator.EQ, transTypeVal);\n\t\t\tvar status = new sap.ui.model.Filter(\"Status\", sap.ui.model.FilterOperator.EQ, statusVal);\n\t\t\tvar priority = new sap.ui.model.Filter(\"Priority\", sap.ui.model.FilterOperator.EQ, priorityVal);\n\t\t\tvar requestedStart = new sap.ui.model.Filter(\"RequestedStart\", sap.ui.model.FilterOperator.BT, dateFromVal, dateToVal);\n\t\t\tvar oDataModel = new sap.ui.model.odata.v2.ODataModel(sUrl, {\n\t\t\t\tjson: true,\n\t\t\t\tloadMetadataAsync: true\n\t\t\t});\n\t\t\toDataModel.read(\"/Count_ItemSet\", {\n\t\t\t\tfilters: [id, transType, status, priority, requestedStart],\n\t\t\t\tsuccess: function(oData, response) {\n\t\t\t\t\tvar oVizFrame = that.getView().byId(\"oVizFrame\");\n\t\t\t\t\tvar oJSONModel = new sap.ui.model.json.JSONModel(oData);\n\t\t\t\t\toVizFrame.setModel(oJSONModel);\n\t\t\t\t\tthat._setTextInfo(oData.results);\n\t\t\t\t\tsap.ui.core.BusyIndicator.hide();\n\t\t\t\t},\n\t\t\t\terror: function(oError) {\n\t\t\t\t\tMessageBox.error(oError.statusText);\n\t\t\t\t\tsap.ui.core.BusyIndicator.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_initBtnNextLast: function(top) {\n\t\t\tif (this.pageNumber === 1 && top < this.totalRecord) {\n\t\t\t\tthis.getView().byId(\"btn_next_page\").setEnabled(true);\n\t\t\t\tthis.getView().byId(\"btn_last_page\").setEnabled(true);\n\t\t\t\tthis.getView().byId(\"btn_prev_page\").setEnabled(false);\n\t\t\t\tthis.getView().byId(\"btn_first_page\").setEnabled(false);\n\t\t\t} else if (this.pageNumber === 1 && top >= this.totalRecord) {\n\t\t\t\tthis.getView().byId(\"btn_next_page\").setEnabled(false);\n\t\t\t\tthis.getView().byId(\"btn_last_page\").setEnabled(false);\n\t\t\t\tthis.getView().byId(\"btn_prev_page\").setEnabled(false);\n\t\t\t\tthis.getView().byId(\"btn_first_page\").setEnabled(false);\n\t\t\t}\n\t\t},\n\n\t\t_setTextInfo: function(results) {\n\t\t\tvar top = this.getView().byId(\"page_size\").getSelectedKey();\n\n\t\t\tvar today = new Date();\n\t\t\tvar date = String(today.getDate()).padStart(2, \"0\") + \".\" + String(today.getMonth() + 1).padStart(2, \"0\") + \".\" + today.getFullYear();\n\t\t\tvar time = String(today.getHours()).padStart(2, \"0\") + \":\" + String(today.getMinutes()).padStart(2, \"0\") + \":\" + String(today.getSeconds())\n\t\t\t\t.padStart(2, \"0\");\n\t\t\tvar dateTime = date + \" \" + time;\n\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\tif (results[i].Status === \"Close\") {\n\t\t\t\t\tthis.totalClose = results[i].Count;\n\t\t\t\t} else if (results[i].Status === \"Open\") {\n\t\t\t\t\tthis.totalOpen = results[i].Count;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar pageSize = this.getView().byId(\"page_size\").getSelectedKey();\n\t\t\tthis.totalRecord = this.totalClose + this.totalOpen;\n\t\t\tthis.pageMax = Math.ceil(this.totalRecord / pageSize);\n\n\t\t\tthis._initBtnNextLast(top);\n\n\t\t\tthis.getView().byId(\"txt_info\").setText(\"Result List: \" + this.totalRecord + \", Last Refresh: \" + dateTime);\n\t\t\tthis.getView().byId(\"txtTotal\").setText(\"Total: \" + this.totalRecord);\n\t\t\tthis.getView().byId(\"txtOpen\").setText(\"Open: \" + this.totalOpen);\n\t\t\tthis.getView().byId(\"txtClose\").setText(\"Close: \" + this.totalClose);\n\t\t},\n\n\t\tonChangePageSize: function(oEvent) {\n\t\t\tthis.pageNumber = 1;\n\t\t\tthis._searchTicket();\n\t\t},\n\n\t\tonRefresh: function(oEvent) {\n\t\t\tthis.pageNumber = 1;\n\t\t\tthis._searchTicket();\n\t\t},\n\n\t\tonRefreshAuto: function(oEvent) {\n\t\t\tvar that = this;\n\t\t\tvar switchRefresh = this.getView().byId(\"switchRefresh\").getState();\n\t\t\tif (switchRefresh) {\n\t\t\t\tthat.autoRefresh = setInterval(function() {\n\t\t\t\t\tthat.onRefresh(oEvent);\n\t\t\t\t}, 60000);\n\t\t\t} else {\n\t\t\t\tclearInterval(that.autoRefresh);\n\t\t\t}\n\t\t}\n\t});\n});",
		"solman/view/EditEntity.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:l=\"sap.ui.layout\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:smart=\"sap.ui.comp.smartfield\" xmlns=\"sap.m\" controllerName=\"solman.controller.EditEntity\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" title=\"Detail {TransactionType}\" busy=\"{viewModel>/busy}\" showNavButton=\"true\">\n\t\t<semantic:content>\n\t\t\t<sap.ui.layout:Grid xmlns:sap.ui.layout=\"sap.ui.layout\" id=\"grid_container\" defaultSpan=\"XL12 L12 M12 S12\" width=\"100%\" containerQuery=\"false\" hSpacing=\"0\" position=\"Center\" vSpacing=\"0\" visible=\"true\">\n\t\t\t\t<sap.ui.layout:Grid xmlns:sap.ui.layout=\"sap.ui.layout\" id=\"grid_content\" defaultSpan=\"XL12 L12 M12 S12\" width=\"100%\" containerQuery=\"false\" hSpacing=\"0.5\" position=\"Center\" vSpacing=\"0\" visible=\"true\">\n\t\t\t\t\t<sap.ui.layout:content>\n\t\t\t\t\t\t<Bar>\n\t\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t\t<Label text=\"Incident:\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t<Label text=\"{TicketId}\" class=\"sapUiMediumMarginEnd\"/>\n\t\t\t\t\t\t\t\t<Switch state=\"false\" id=\"switchMode\" customTextOn=\"Edit\" change=\"onChangeMode\" customTextOff=\"Edit\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t\t<!--<Button enabled=\"true\" id=\"btn_display\" press=\"onDisplay\" text=\"Display\" type=\"Emphasized\" tooltip=\"Display\"/>-->\n\t\t\t\t\t\t\t\t<!--<Button enabled=\"true\" id=\"btn_change\" press=\"onChangeTicket\" text=\"Change\" type=\"Emphasized\" tooltip=\"Change\"/>-->\n\t\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t\t<Button enabled=\"true\" id=\"btnHome\" press=\"onHome\" type=\"Emphasized\" tooltip=\"Home\" icon=\"sap-icon://refresh\"/>\n\t\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t\t</Bar>\n\t\t\t\t\t\t<!-- START form Description -->\n\t\t\t\t\t\t<f:SimpleForm class=\"editableForm\" title=\"Description\" columnsL=\"2\" columnsM=\"2\" editable=\"true\" id=\"form_information\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\">\n\t\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t\t<!-- START Description -->\n\t\t\t\t\t\t\t\t<Label text=\"Description\" required=\"true\" labelFor=\"description\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t<Input name=\"description\" value=\"{Description}\" maxLength=\"255\" id=\"description\" required=\"true\" enabled=\"false\" placeholder=\"Description\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t<!-- END Description -->\n\t\t\t\t\t\t\t\t<!-- START Requested Start -->\n\t\t\t\t\t\t\t\t<Label text=\"Requested Start\" labelFor=\"requested_start\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t<Input name=\"requested_start\" id=\"requested_start\" value=\"{RequestedStart}\" enabled=\"false\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t<!-- END Requested Start -->\n\t\t\t\t\t\t\t\t<!-- START Priority -->\n\t\t\t\t\t\t\t\t<Label text=\"Priority\" required=\"true\" labelFor=\"priority\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t<Select xmlns:sap.ui.core=\"sap.ui.core\" selectedKey=\"{Priority}\" id=\"priority\" enabled=\"false\" forceSelection=\"false\">\n\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Very high\" key=\"1\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"High\" key=\"2\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Medium\" key=\"3\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Low\" key=\"4\"/>\n\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t<!-- END Priority -->\n\t\t\t\t\t\t\t\t<!-- START First Response By -->\n\t\t\t\t\t\t\t\t<Label text=\"First Response by\" labelFor=\"first_response_by\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t<Input name=\"first_response_by\" id=\"first_response_by\" value=\"{FirstResponseBy}\" enabled=\"false\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t<!-- END First Response By -->\n\t\t\t\t\t\t\t\t<!-- START Impact -->\n\t\t\t\t\t\t\t\t<Label text=\"Impact\" required=\"true\" labelFor=\"impact\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t<Select xmlns:sap.ui.core=\"sap.ui.core\" selectedKey=\"{Impact}\" id=\"impact\" forceSelection=\"false\" enabled=\"false\">\n\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Disaster\" key=\"CA_1\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"High\" key=\"CA_2\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Medium\" key=\"CA_3\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Low\" key=\"CA_4\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"None \" key=\"CA_5\"/>\n\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t<!-- END Impact -->\n\t\t\t\t\t\t\t\t<!-- START Due by -->\n\t\t\t\t\t\t\t\t<Label text=\"Due by\" labelFor=\"due_by\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t<Input name=\"due_by\" id=\"due_by\" value=\"{DueBy}\" enabled=\"false\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t<!-- END Due by -->\n\t\t\t\t\t\t\t\t<!-- START Status -->\n\t\t\t\t\t\t\t\t<Label text=\"Status\" labelFor=\"status\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t<Select xmlns:sap.ui.core=\"sap.ui.core\" selectedKey=\"{Status}\" id=\"status\" forceSelection=\"false\" enabled=\"false\">\n\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"New\" key=\"E0001\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Canceled\" key=\"E0010\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Sent To Sap\" key=\"E0026\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Assigned\" key=\"E0009\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Proposed Solution\" key=\"E0005\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"On Hold\" key=\"E0025\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Build\" key=\"E0015\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Test\" key=\"E0016\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Deployment\" key=\"E0017\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Customer Action\" key=\"E0003\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Confirmed by Customer\" key=\"E0020\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Rejected by Customer\" key=\"E0021\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Completed\" key=\"E0022\"/>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Closed\" key=\"E0008\"/>\n\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t<!-- END Status -->\n\t\t\t\t\t\t\t\t<!-- START Message Processor -->\n\t\t\t\t\t\t\t\t<Label text=\"Message Processor\" labelFor=\"message_processor\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t<Input name=\"message_processor\" id=\"message_processor\" value=\"{MessProcess}\" enabled=\"false\">\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t<!-- END Message Processor -->\n\t\t\t\t\t\t\t</f:content>\n\t\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t\t<!-- END form Description -->\n\t\t\t\t\t\t<!-- START form Text Description -->\n\t\t\t\t\t\t<f:SimpleForm class=\"editableForm\" title=\"Text Description\" columnsL=\"2\" columnsM=\"2\" editable=\"true\" id=\"form_text_description\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\">\n\t\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t\t<TextArea id=\"text_description\" value=\"{TextDescription}\" rows=\"8\" placeholder=\"Enter a Detailed description of your incident...\" enabled=\"false\"/>\n\t\t\t\t\t\t\t</f:content>\n\t\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t\t<!-- END form Text Description -->\n\t\t\t\t\t\t<!-- START Attachments -->\n\t\t\t\t\t\t<UploadCollection id=\"UploadCollection\" maximumFilenameLength=\"{settings>/maximumFilenameLength}\" maximumFileSize=\"{settings>/maximumFileSize}\" multiple=\"true\" change=\"onUpload\" fileDeleted=\"onFileDeleted\" filenameLengthExceed=\"onFilenameLengthExceed\" fileRenamed=\"onFileRenamed\" fileSizeExceed=\"onFileSizeExceed\" fileType=\"{fileTypes>/selected}\" selectionChange=\"onSelectionChange\" typeMissmatch=\"onTypeMissmatch\" uploadComplete=\"onUploadComplete\" beforeUploadStarts=\"onBeforeUploadStarts\" uploadTerminated=\"onUploadTerminated\" items=\"{ToAttachSet}\" numberOfAttachmentsText=\"Attachments\" showSeparators=\"{settings>/showSeparators}\" uploadEnabled=\"{settings>/uploadEnabled}\" uploadButtonInvisible=\"true\" mode=\"{settings>/mode}\">\n\t\t\t\t\t\t\t<toolbar>\n\t\t\t\t\t\t\t\t<OverflowToolbar id=\"myId\">\n\t\t\t\t\t\t\t\t\t<Title id=\"attachmentTitle\"/>\n\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t<!--<SearchField width=\"10rem\" search=\"onSearch\"/>-->\n\t\t\t\t\t\t\t\t\t<Button id=\"downloadSelectedBtn\" text=\"Download\" tooltip=\"Download\" press=\"onDownload\" enabled=\"true\" visible=\"true\" type=\"Emphasized\"/>\n\t\t\t\t\t\t\t\t\t<!--<ToggleButton id=\"selectAllButton\" text=\"Select all\" press=\"onSelectAllPress\" enabled=\"false\" visible=\"false\" type=\"Transparent\"/>-->\n\t\t\t\t\t\t\t\t\t<UploadCollectionToolbarPlaceholder/>\n\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t</toolbar>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<UploadCollectionItem documentId=\"{IdAtt}\" fileName=\"{NameFile}\" mimeType=\"{Mime}\" enableEdit=\"false\" enableDelete=\"false\" visibleDelete=\"true\" visibleEdit=\"false\">\n\t\t\t\t\t\t\t\t</UploadCollectionItem>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</UploadCollection>\n\t\t\t\t\t\t<!-- END Attachments -->\n\t\t\t\t\t\t<!-- START Comment -->\n\t\t\t\t\t\t<f:SimpleForm class=\"editableForm\" visible=\"false\" title=\"Comment\" columnsL=\"2\" columnsM=\"2\" editable=\"true\" id=\"form_comment\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\">\n\t\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t\t<TextArea id=\"comment\" visible=\"false\" rows=\"8\" value=\"{Comment}\" placeholder=\"Enter a Comment of your incident...\" enabled=\"false\"/>\n\t\t\t\t\t\t\t</f:content>\n\t\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t\t<!-- END Comment -->\n\t\t\t\t\t</sap.ui.layout:content>\n\t\t\t\t</sap.ui.layout:Grid>\n\t\t\t</sap.ui.layout:Grid>\n\t\t</semantic:content>\n\t\t<semantic:saveAction>\n\t\t\t<semantic:SaveAction id=\"save\" press=\"onSave\" enabled=\"false\"/>\n\t\t</semantic:saveAction>\n\t\t<semantic:cancelAction>\n\t\t\t<semantic:CancelAction id=\"cancel\" press=\"onCancel\" enabled=\"false\"/>\n\t\t</semantic:cancelAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"solman/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"solman/model/models\",\n\t\"solman/controller/ListSelector\",\n\t\"solman/controller/ErrorHandler\"\n], function(UIComponent, Device, models, ListSelector, ErrorHandler) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"solman.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\",\n\t\t\tconfig: {fullWidth: true}\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * In this method, the FLP and device models are set and the router is initialized.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\tthis.oListSelector = new ListSelector();\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t\t// set the FLP model\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\n\n\t\t\t// call the base component's init function and create the App view\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// create the views based on the url/hash\n\t\t\tthis.getRouter().initialize();\n\t\t},\n\n\t\t/**\n\t\t * The component is destroyed by UI5 automatically.\n\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tdestroy: function() {\n\t\t\tthis.oListSelector.destroy();\n\t\t\tthis._oErrorHandler.destroy();\n\t\t\t// call the base component's destroy function\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t},\n\n\t\t/**\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t * @public\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t */\n\t\tgetContentDensityClass: function() {\n\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t} else {\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._sContentDensityClass;\n\t\t}\n\n\t});\n\n});",
		"solman/controller/TablePersoService.js": "sap.ui.define(['jquery.sap.global'],\n\tfunction(jQuery) {\n\t\"use strict\";\n\n\tvar TablePersoService = {\n\n\t\toData : {\n\t\t\t_persoSchemaVersion: \"1.0\",\n\t\t\taColumns : [\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-idCol\",\n\t\t\t\t\torder: 0,\n\t\t\t\t\ttext: \"Id\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-descriptionCol\",\n\t\t\t\t\torder: 1,\n\t\t\t\t\ttext: \"Description\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-requestedStartCol\",\n\t\t\t\t\torder: 2,\n\t\t\t\t\ttext: \"Requested start\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-priorityCol\",\n\t\t\t\t\torder: 3,\n\t\t\t\t\ttext: \"Priority\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-transactionTypeCol\",\n\t\t\t\t\torder: 4,\n\t\t\t\t\ttext: \"Transaction type\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-firstResponseCol\",\n\t\t\t\t\torder: 5,\n\t\t\t\t\ttext: \"First Response\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-dueByCol\",\n\t\t\t\t\torder: 6,\n\t\t\t\t\ttext: \"Due by\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-userStatusCol\",\n\t\t\t\t\torder: 7,\n\t\t\t\t\ttext: \"User status\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-personResponsibleCol\",\n\t\t\t\t\torder: 8,\n\t\t\t\t\ttext: \"Person responsible\",\n\t\t\t\t\tvisible: true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\n\t\tgetPersData : function () {\n\t\t\tvar oDeferred = new jQuery.Deferred();\n\t\t\tif (!this._oBundle) {\n\t\t\t\tthis._oBundle = this.oData;\n\t\t\t}\n\t\t\tvar oBundle = this._oBundle;\n\t\t\toDeferred.resolve(oBundle);\n\t\t\treturn oDeferred.promise();\n\t\t},\n\n\t\tsetPersData : function (oBundle) {\n\t\t\tvar oDeferred = new jQuery.Deferred();\n\t\t\tthis._oBundle = oBundle;\n\t\t\toDeferred.resolve();\n\t\t\treturn oDeferred.promise();\n\t\t},\n\n\t\tresetPersData : function () {\n\t\t\tvar oDeferred = new jQuery.Deferred();\n\t\t\tvar oInitialData = {\n\t\t\t\t_persoSchemaVersion: \"1.0\",\n\t\t\t\taColumns : [\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-idCol\",\n\t\t\t\t\torder: 0,\n\t\t\t\t\ttext: \"Id\",\n\t\t\t\t\tvisible: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-descriptionCol\",\n\t\t\t\t\torder: 1,\n\t\t\t\t\ttext: \"Description\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-requestedStartCol\",\n\t\t\t\t\torder: 2,\n\t\t\t\t\ttext: \"Requested start\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-priorityCol\",\n\t\t\t\t\torder: 3,\n\t\t\t\t\ttext: \"Priority\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-transactionTypeCol\",\n\t\t\t\t\torder: 4,\n\t\t\t\t\ttext: \"Transaction type\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-firstResponseCol\",\n\t\t\t\t\torder: 5,\n\t\t\t\t\ttext: \"First Response\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-dueByCol\",\n\t\t\t\t\torder: 6,\n\t\t\t\t\ttext: \"Due by\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-userStatusCol\",\n\t\t\t\t\torder: 7,\n\t\t\t\t\ttext: \"User status\",\n\t\t\t\t\tvisible: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"ticketApp-table_list_ticket-personResponsibleCol\",\n\t\t\t\t\torder: 8,\n\t\t\t\t\ttext: \"Person responsible\",\n\t\t\t\t\tvisible: true\n\t\t\t\t}\n\t\t\t]\n\t\t\t};\n\n\t\t\t//set personalization\n\t\t\tthis._oBundle = oInitialData;\n\n\t\t\toDeferred.resolve();\n\t\t\treturn oDeferred.promise();\n\t\t}\n\t};\n\n\treturn TablePersoService;\n\n}, true);",
		"solman/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ViewSettingsDialog id=\"viewSettingsDialog\" confirm=\"onConfirmViewSettingsDialog\" resetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem id=\"filterItems\" text=\"{i18n>masterFilterName}\" key=\"Price\" multiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter1}\" key=\"Filter1\" id=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter2}\" key=\"Filter2\" id=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n</core:FragmentDefinition>",
		"solman/view/Master.view.xml": "<mvc:View controllerName=\"solman.controller.Master\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\">\n\t<semantic:MasterPage id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\" showNavButton=\"true\">\n\t\t<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\"\n\t\t\t\t\t\tsearch=\"onSearch\"></SearchField>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\t\t<semantic:content>\n\t\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List id=\"list\" items=\"{ path: '/ItemSet', sorter: { path: 'Attachment', descending: false }, groupHeaderFactory: '.createGroupHeader' }\"\n\t\t\t\tbusyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\"\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingScrollToLoad=\"true\"\n\t\t\t\tupdateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" title=\"{Attachment}\"></ObjectListItem>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\t\t<semantic:addAction>\n\t\t\t<semantic:AddAction id=\"addButton\" enabled=\"{appView>/addEnabled}\" press=\"onAdd\"/>\n\t\t</semantic:addAction>\n\t</semantic:MasterPage>\n</mvc:View>",
		"solman/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t},\n\n\t\tcreateFLPModel: function() {\n\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\n\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\n\t\t\t\toModel = new JSONModel({\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\n\t\t\t\t});\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\t};\n\n});",
		"solman/model/formatter.js": "sap.ui.define([], function() {\n\t\"use strict\";\n\n\treturn {\n\t\t/**\n\t\t * Rounds the currency value to 2 digits\n\t\t *\n\t\t * @public\n\t\t * @param {string} sValue value to be formatted\n\t\t * @returns {string} formatted currency value with 2 digits\n\t\t */\n\t\tcurrencyValue: function(sValue) {\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t}\n\t};\n\n});",
		"solman/model/GroupSortState.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/ui/model/Sorter\"\n], function(BaseObject, Sorter) {\n\t\"use strict\";\n\n\treturn BaseObject.extend(\"solman.model.GroupSortState\", {\n\n\t\t/**\n\t\t * Creates sorters and groupers for the master list.\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\n\t\t * @class\n\t\t * @public\n\t\t * @alias solman.model.GroupSortState\n\t\t */\n\t\tconstructor: function(oViewModel, fnGroupFunction) {\n\t\t\tthis._oViewModel = oViewModel;\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\n\t\t},\n\n\t\t/**\n\t\t * Sorts by Attachment, or by \n\t\t *\n\t\t * @param sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tsort: function(sKey) {\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\n\n\t\t\tif (sGroupedBy !== \"None\") {\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\n\t\t\t}\n\n\t\t\treturn [new Sorter(sKey, false)];\n\t\t},\n\n\t\t/**\n\t\t * Groups by , or resets the grouping for the key \"None\"\n\t\t *\n\t\t * @param sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tgroup: function(sKey) {\n\t\t\tvar aSorters = [];\n\n\t\t\tif (sKey === \"\") {\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"\");\n\n\t\t\t\taSorters.push(\n\t\t\t\t\tnew Sorter(\"\", false,\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\n\t\t\t\t);\n\t\t\t} else if (sKey === \"None\") {\n\t\t\t\t// select the default sorting again\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"Attachment\");\n\t\t\t}\n\n\t\t\treturn aSorters;\n\t\t}\n\n\t});\n});",
		"solman/localService/mockserver.js": "sap.ui.define([\n\t\"sap/ui/core/util/MockServer\"\n], function(MockServer) {\n\t\"use strict\";\n\n\tvar oMockServer,\n\t\t_sAppModulePath = \"solman/\",\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\treturn {\n\t\t/**\n\t\t * Initializes the mock server.\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t * @public\n\t\t */\n\n\t\tinit: function() {\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\tsEntity = \"ItemSet\",\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t// ensure there is a trailing slash\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\toMockServer = new MockServer({\n\t\t\t\trootUri: sMockServerUrl\n\t\t\t});\n\n\t\t\t// configure mock server with a delay of 1s\n\t\t\tMockServer.config({\n\t\t\t\tautoRespond: true,\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t});\n\n\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\n\t\t\t\tbGenerateMissingMockData: true\n\t\t\t});\n\n\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\n\t\t\t\t\taRequest.response = function(oXhr) {\n\t\t\t\t\t\toXhr.respond(iErrCode, {\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\n\t\t\t\t\t\t}, sMessage);\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t// handling the metadata error test\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Handling request errors\n\t\t\tif (sErrorParam) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\toMockServer.start();\n\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t},\n\n\t\t/**\n\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t */\n\t\tgetMockServer: function() {\n\t\t\treturn oMockServer;\n\t\t}\n\t};\n\n});",
		"solman/controller/App.controller.js": "sap.ui.define([\n\t\"solman/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(BaseController, JSONModel) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"solman.controller.App\", {\n\n\t\tonInit: function() {\n\t\t\tvar oViewModel,\n\t\t\t\tfnSetAppNotBusy,\n\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\toViewModel = new JSONModel({\n\t\t\t\tbusy: true,\n\t\t\t\tdelay: 0,\n\t\t\t\titemToSelect: null,\n\t\t\t\taddEnabled: false\n\n\t\t\t});\n\t\t\tthis.setModel(oViewModel, \"appView\");\n\n\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t};\n\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\n\t\t\t\t.then(fnSetAppNotBusy);\n\n\t\t\t// Makes sure that master view is hidden in split app\n\t\t\t// after a new list entry has been selected.\n\t\t\toListSelector.attachListSelectionChange(function() {\n\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\n\t\t\t}, this);\n\n\t\t\t// apply content density mode to root view\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t}\n\t});\n\n});",
		"solman/controller/ErrorHandler.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/m/MessageBox\"\n], function(UI5Object, MessageBox) {\n\t\"use strict\";\n\n\treturn UI5Object.extend(\"solman.controller.ErrorHandler\", {\n\n\t\t/**\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t * @class\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t * @public\n\t\t * @alias solman.controller.ErrorHandler\n\t\t */\n\t\tconstructor: function(oComponent) {\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\tthis._oComponent = oComponent;\n\t\t\tthis._oModel = oComponent.getModel();\n\t\t\tthis._bMessageOpen = false;\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\tthis._showMetadataError(oParams.response);\n\t\t\t}, this);\n\n\t\t\tthis._oModel.attachRequestFailed(this.onRequestFailed, this);\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Event Handler for Request Fail event\n\t\t * The user can try to refresh the metadata.\n\t\t * @param {object} oEvent an event containing the response data\n\t\t * @private\n\t\t */\n\t\tonRequestFailed: function(oEvent) {\n\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\tif ((oParams.response.statusCode !== \"404\") || (oParams.response.statusCode === 404 &&\n\t\t\t\t\toParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\n\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\n\t\t * The user can try to refresh the metadata.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showMetadataError: function(sDetails) {\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function(sAction) {\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox}.\n\t\t * The user can try to refresh the metadata.\n\t\t * @param {string} sTitle the MessageBox title, {string} sMessageHeader and {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showErrorMsg: function(sTitle, sMessageHeader, sDetails) {\n\n\t\t\tMessageBox.error(\n\t\t\t\tsMessageHeader, {\n\t\t\t\t\tid: \"ErrorMessageBox\",\n\t\t\t\t\ttitle: sTitle,\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\ticon: MessageBox.Icon.ERROR,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: MessageBox.Action.CLOSE\n\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t * Only the first error message will be display.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showServiceError: function(sDetails) {\n\t\t\tif (this._bMessageOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._bMessageOpen = true;\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails.responseText,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n});",
		"solman/controller/Master.controller.js": "/*global history */\nsap.ui.define([\n\t\"solman/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/m/GroupHeaderListItem\",\n\t\"sap/ui/Device\",\n\t\"solman/model/formatter\",\n\t\"sap/m/MessageBox\"\n], function(BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, MessageBox) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"solman.controller.Master\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\n\t\t * @public\n\t\t */\n\t\tonInit: function() {\n\t\t\t// Control state model\n\t\t\tvar oList = this.byId(\"list\"),\n\t\t\t\toViewModel = this._createViewModel(),\n\t\t\t\t// Put down master list's original value for busy indicator delay,\n\t\t\t\t// so it can be restored later on. Busy handling on the master list is\n\t\t\t\t// taken care of by the master list itself.\n\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\n\t\t\tthis._oListSelector = this.getOwnerComponent().oListSelector;\n\n\t\t\tthis._oList = oList;\n\t\t\t// keeps the filter and search state\n\t\t\tthis._oListFilterState = {\n\t\t\t\taFilter: [],\n\t\t\t\taSearch: []\n\t\t\t};\n\n\t\t\tthis.setModel(oViewModel, \"masterView\");\n\t\t\t// Make sure, busy indication is showing immediately so there is no\n\t\t\t// break after the busy indication for loading the view's meta data is\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\n\t\t\toList.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t// Restore original busy indicator delay for the list\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t});\n\n\t\t\tthis.getView().addEventDelegate({\n\t\t\t\tonBeforeFirstShow: function() {\n\t\t\t\t\tthis._oListSelector.setBoundMasterList(oList);\n\t\t\t\t}.bind(this)\n\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\n\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * After list data is available, this handler method updates the\n\t\t * master list counter and hides the pull to refresh control, if\n\t\t * necessary.\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\n\t\t * @public\n\t\t */\n\t\tonUpdateFinished: function(oEvent) {\n\t\t\t// update the master list object counter after new data is loaded\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\n\t\t\t// hide pull to refresh if necessary\n\t\t\tthis.byId(\"pullToRefresh\").hide();\n\t\t\tthis._findItem();\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the master search field. Applies current\n\t\t * filter value and triggers a new search. If the search field's\n\t\t * 'refresh' button has been pressed, no new search is triggered\n\t\t * and the list binding is refresh instead.\n\t\t * @param {sap.ui.base.Event} oEvent the search event\n\t\t * @public\n\t\t */\n\t\tonSearch: function(oEvent) {\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\n\t\t\t\t// Search field's 'refresh' button has been pressed.\n\t\t\t\t// This is visible if you select any master list item.\n\t\t\t\t// In this case no new search is triggered, we only\n\t\t\t\t// refresh the list binding.\n\t\t\t\tthis.onRefresh();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\n\n\t\t\tif (sQuery) {\n\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Attachment\", FilterOperator.Contains, sQuery)];\n\t\t\t} else {\n\t\t\t\tthis._oListFilterState.aSearch = [];\n\t\t\t}\n\t\t\tthis._applyFilterSearch();\n\n\t\t},\n\n\t\t/**\n\t\t * Event handler for refresh event. Keeps filter, sort\n\t\t * and group settings and refreshes the list binding.\n\t\t * @public\n\t\t */\n\t\tonRefresh: function() {\n\t\t\tthis._oList.getBinding(\"items\").refresh();\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the sorter selection.\n\t\t * @param {sap.ui.base.Event} oEvent the select event\n\t\t * @public\n\t\t */\n\t\tonSort: function(oEvent) {\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\n\t\t\t\taSorters = this._oGroupSortState.sort(sKey);\n\n\t\t\tthis._applyGroupSort(aSorters);\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the list selection event\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\n\t\t * @public\n\t\t */\n\t\tonSelectionChange: function(oEvent) {\n\t\t\tvar that = this;\n\t\t\tvar oItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\t\t\tvar fnLeave = function() {\n\t\t\t\tthat._oODataModel.resetChanges();\n\t\t\t\tthat._showDetail(oItem);\n\t\t\t};\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\n\t\t\t\tthis._leaveEditPage(fnLeave);\n\t\t\t} else {\n\t\t\t\tthis._showDetail(oItem);\n\t\t\t}\n\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\n\t\t * If there was an object selected in the master list, that selection is removed.\n\t\t * @public\n\t\t */\n\t\tonBypassed: function() {\n\t\t\tthis._oList.removeSelections(true);\n\t\t},\n\n\t\t/**\n\t\t * Used to create GroupHeaders with non-capitalized caption.\n\t\t * These headers are inserted into the master list to\n\t\t * group the master list's items.\n\t\t * @param {Object} oGroup group whose text is to be displayed\n\t\t * @public\n\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\n\t\t */\n\t\tcreateGroupHeader: function(oGroup) {\n\t\t\treturn new GroupHeaderListItem({\n\t\t\t\ttitle: oGroup.text,\n\t\t\t\tupperCase: false\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Navigates back in the browser history, if the entry was created by this app.\n\t\t * If not, it navigates to the Fiori Launchpad home page\n\t\t * @override\n\t\t * @public\n\t\t */\n\t\tonNavBack: function() {\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\t// Navigate back to FLP home\n\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tshellHash: \"#Shell-home\"\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Event handler  (attached declaratively) called when the add button in the master view is pressed. it opens the create view.\n\t\t * @public\n\t\t */\n\t\tonAdd: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\n\t\t\tthis.getRouter().getTargets().display(\"create\");\n\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* begin: internal methods                                     */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Creates the model for the view\n\t\t * @private\n\t\t */\n\t\t_createViewModel: function() {\n\t\t\treturn new JSONModel({\n\t\t\t\tisFilterBarVisible: false,\n\t\t\t\tfilterBarLabel: \"\",\n\t\t\t\tdelay: 0,\n\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\n\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\n\t\t\t\tsortBy: \"Attachment\",\n\t\t\t\tgroupBy: \"None\"\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Ask for user confirmation to leave the edit page and discard all changes\n\t\t * @param {object} fnLeave - handles discard changes\n\t\t * @param {object} fnLeaveCancelled - handles cancel\n\t\t * @private\n\t\t */\n\t\t_leaveEditPage: function(fnLeave, fnLeaveCancelled) {\n\t\t\tvar sQuestion = this.getResourceBundle().getText(\"warningConfirm\");\n\t\t\tvar sTitle = this.getResourceBundle().getText(\"warning\");\n\n\t\t\tMessageBox.show(sQuestion, {\n\t\t\t\ticon: MessageBox.Icon.WARNING,\n\t\t\t\ttitle: sTitle,\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\n\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\n\t\t\t\t\t\tfnLeave();\n\t\t\t\t\t} else if (fnLeaveCancelled) {\n\t\t\t\t\t\tfnLeaveCancelled();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * If the master route was hit (empty hash) we have to set\n\t\t * the hash to to the first item in the list as soon as the\n\t\t * listLoading is done and the first item in the list is known\n\t\t * @private\n\t\t */\n\t\t_onMasterMatched: function() {\n\t\t\tthis._oListSelector.oWhenListLoadingIsDone.then(\n\t\t\t\tfunction(mParams) {\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t\t\tif (!mParams.list.getSelectedItem()) {\n\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\t\t\t\tId: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Id\"))\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tfunction(mParams) {\n\t\t\t\t\tif (mParams.error) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Shows the selected item on the detail page\n\t\t * On phones a additional history entry is created\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\n\t\t * @private\n\t\t */\n\t\t_showDetail: function(oItem) {\n\t\t\tvar bReplace = !Device.system.phone;\n\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\tId: encodeURIComponent(oItem.getBindingContext().getProperty(\"Id\"))\n\t\t\t}, bReplace);\n\t\t},\n\n\t\t/**\n\t\t * Sets the item count on the master list header\n\t\t * @param {integer} iTotalItems the total number of items in the list\n\t\t * @private\n\t\t */\n\t\t_updateListItemCount: function(iTotalItems) {\n\t\t\tvar sTitle;\n\t\t\t// only update the counter if the length is final\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method to apply both filter and search state together on the list binding\n\t\t * @private\n\t\t */\n\t\t_applyFilterSearch: function() {\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\n\t\t\t\toViewModel = this.getModel(\"masterView\");\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\tif (aFilters.length !== 0) {\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\n\t\t\t\t// only reset the no data text to default when no new search was triggered\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method to apply both group and sort state together on the list binding\n\t\t * @private\n\t\t */\n\t\t_applyGroupSort: function(aSorters) {\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\n\t\t * @param {string} sFilterBarText the selected filter value\n\t\t * @private\n\t\t */\n\t\t_updateFilterBar: function(sFilterBarText) {\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method that adds \"/\" to the item's path \n\t\t * @private\n\t\t */\n\t\t_fnGetPathWithSlash: function(sPath) {\n\t\t\treturn (sPath.indexOf(\"/\") === 0 ? \"\" : \"/\") + sPath;\n\t\t},\n\n\t\t/**\n\t\t * It navigates to the saved itemToSelect item. After delete it navigate to the next item. \n\t\t * After add it navigates to the new added item if it is displayed in the tree. If not it navigates to the first item.\n\t\t * @private\n\t\t */\n\t\t_findItem: function() {\n\t\t\tvar itemToSelect = this.getModel(\"appView\").getProperty(\"/itemToSelect\");\n\t\t\tif (itemToSelect) {\n\t\t\t\tvar sPath = this._fnGetPathWithSlash(itemToSelect);\n\t\t\t\tvar oItem = this._oListSelector.findListItem(sPath);\n\t\t\t\tif (!oItem) { //item is not viewable in the tree. not in the current tree page.\n\t\t\t\t\toItem = this._oListSelector.findFirstItem();\n\t\t\t\t\tif (oItem) {\n\t\t\t\t\t\tsPath = oItem.getBindingContext().getPath();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._oListSelector.selectAListItem(sPath);\n\t\t\t\tthis._showDetail(oItem);\n\t\t\t}\n\t\t}\n\n\t});\n});",
		"solman/controller/CreateEntity.controller.js": "sap.ui.define([\n\t\"solman/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/m/MessageBox\",\n\t\"sap/m/ObjectMarker\",\n\t\"sap/ui/core/format/FileSizeFormat\",\n\t\"sap/m/UploadCollectionParameter\",\n\t\"sap/m/MessageToast\",\n\t\"sap/m/library\"\n], function(BaseController, JSONModel, MessageBox, ObjectMarker, FileSizeFormat, UploadCollectionParameter, MessageToast, MobileLibrary) {\n\t\"use strict\";\n\tvar GFile = [];\n\treturn BaseController.extend(\"solman.controller.CreateEntity\", {\n\t\tonInit: function() {\n\t\t\tvar data = {\n\t\t\t\t\"items\": []\n\t\t\t};\n\t\t\tthis.getView().setModel(new JSONModel(data));\n\n\t\t\tthis.getView().setModel(new JSONModel({\n\t\t\t\t// \"maximumFilenameLength\": 55,\n\t\t\t\t\"maximumFileSize\": 3,\n\t\t\t\t\"mode\": MobileLibrary.ListMode.SingleSelectMaster,\n\t\t\t\t\"uploadEnabled\": true,\n\t\t\t\t\"uploadButtonVisible\": false,\n\t\t\t\t\"enableEdit\": true,\n\t\t\t\t\"enableDelete\": true,\n\t\t\t\t\"visibleEdit\": true,\n\t\t\t\t\"visibleDelete\": true,\n\t\t\t\t\"listSeparatorItems\": [\n\t\t\t\t\tMobileLibrary.ListSeparators.All,\n\t\t\t\t\tMobileLibrary.ListSeparators.None\n\t\t\t\t],\n\t\t\t\t\"showSeparators\": MobileLibrary.ListSeparators.All,\n\t\t\t\t\"listModeItems\": [{\n\t\t\t\t\t\"key\": MobileLibrary.ListMode.SingleSelectMaster,\n\t\t\t\t\t\"text\": \"Single\"\n\t\t\t\t}, {\n\t\t\t\t\t\"key\": MobileLibrary.ListMode.MultiSelect,\n\t\t\t\t\t\"text\": \"Multi\"\n\t\t\t\t}]\n\t\t\t}), \"settings\");\n\n\t\t\tthis.getView().setModel(new JSONModel({\n\t\t\t\t\"items\": [\"pdf\", \"doc\", \"docx\", \"xls\", \"xlsx\", \"rar\", \"zip\"],\n\t\t\t\t\"selected\": [\"pdf\", \"doc\", \"docx\", \"xls\", \"xlsx\", \"rar\", \"zip\"]\n\t\t\t}), \"fileTypes\");\n\n\t\t\t// Sets the text to the label\n\t\t\tthis.byId(\"UploadCollection\").addEventDelegate({\n\t\t\t\tonBeforeRendering: function() {\n\t\t\t\t\tthis.byId(\"attachmentTitle\").setText(this.getAttachmentTitleText());\n\t\t\t\t}.bind(this)\n\t\t\t});\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\n\t\t},\n\t\t\n\t\tonNavBack: function() {\n\t\t\tthis.onCancel();\n\t\t},\n\n\t\tonCancel: function() {\n\t\t\tvar oView = this.getView();\n\t\t\tif (oView.byId(\"incident\").getSelectedKey() !== \"ZMIN\" || oView.byId(\"description\").getValue() !== \"\" ||\n\t\t\t\t\toView.byId(\"impact\").getSelectedKey() !== \"CA_1\" || oView.byId(\"requested_start\").getValue() !== \"\" ||\n\t\t\t\t\toView.byId(\"priority\").getSelectedKey() !== \"1\" || oView.byId(\"requested_start\").getValue() !== \"\"  ||\n\t\t\t\t\toView.byId(\"text_description\").getValue() !== \"\" || oView.byId(\"comment\").getValue() !== \"\" ||\n\t\t\t\t\tGFile.length !== 0) {\n\t\t\t\tthis._showConfirmQuitChanges();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._resetDefaultVal();\n\t\t\t\tthis._navBack();\n\t\t\t}\n\t\t},\n\t\t\n\t\t_navBack: function() {\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\n\t\t\tthis.getView().unbindObject();\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t\t}\n\t\t},\n\n\t\t_showConfirmQuitChanges: function() {\n\t\t\tvar oComponent = this.getOwnerComponent();\n\t\t\tvar that = this;\n\t\t\tMessageBox.confirm(this._oResourceBundle.getText(\"confirmCancelMessage\"), {\n\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\n\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\n\t\t\t\t\t\tthat._resetDefaultVal();\n\t\t\t\t\t\tthat._navBack();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonFileDeleted: function(oEvent) {\n\t\t\tthis.deleteItemById(oEvent.getParameter(\"documentId\"));\n\t\t},\n\n\t\tdeleteItemById: function(sDocumentId) {\n\t\t\tvar oData = this.byId(\"UploadCollection\").getModel().getData();\n\t\t\tvar aItems = jQuery.extend(true, {}, oData).items;\n\t\t\tvar fileName = \"\";\n\t\t\tjQuery.each(aItems, function(index) {\n\t\t\t\tif (aItems[index] && aItems[index].documentId === sDocumentId) {\n\t\t\t\t\tfileName = aItems[index].fileName;\n\t\t\t\t\taItems.splice(index, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t\tjQuery.each(GFile, function(index) {\n\t\t\t\tif (fileName !== \"\" && GFile[index] && GFile[index].NameFile === fileName) {\n\t\t\t\t\tGFile.splice(index, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.byId(\"UploadCollection\").getModel().setData({\n\t\t\t\t\"items\": aItems\n\t\t\t});\n\t\t\tthis.byId(\"attachmentTitle\").setText(this.getAttachmentTitleText());\n\t\t},\n\n\t\tonFilenameLengthExceed: function() {\n\t\t\t\n\t\t},\n\n\t\tonFileRenamed: function(oEvent) {\n\t\t\t// var oData = this.byId(\"UploadCollection\").getModel().getData();\n\t\t\t// var aItems = jQuery.extend(true, {}, oData).items;\n\t\t\t// var sDocumentId = oEvent.getParameter(\"documentId\");\n\t\t\t// jQuery.each(aItems, function(index) {\n\t\t\t// \tif (aItems[index] && aItems[index].documentId === sDocumentId) {\n\t\t\t// \t\taItems[index].fileName = oEvent.getParameter(\"item\").getFileName();\n\t\t\t// \t}\n\t\t\t// });\n\t\t\t// this.byId(\"UploadCollection\").getModel().setData({\n\t\t\t// \t\"items\": aItems\n\t\t\t// });\n\t\t},\n\n\t\tonFileSizeExceed: function() {\n\t\t\tMessageBox.error(this._oResourceBundle.getText(\"msg_file_maxsize\"));\n\t\t},\n\n\t\tonTypeMissmatch: function() {\n\t\t\tMessageBox.error(this._oResourceBundle.getText(\"msg_file_extension_error\"));\n\t\t},\n\n\t\tonUpload: function(oEvent) {\n\t\t\tvar oUploadCollection = oEvent.getSource();\n\t\t\tvar oCustomerHeaderToken = new sap.m.UploadCollectionParameter({\n\t\t\t\tname: \"x-csrf-token\",\n\t\t\t\tvalue: \"securityTokenFromModel\"\n\t\t\t});\n\t\t\toUploadCollection.addHeaderParameter(oCustomerHeaderToken);\n\t\t\tvar uploadAttachment = this.getView().byId(\"UploadCollection\");\n\n\t\t\tfunction getFileInfo(file) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.readAsDataURL(file);\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tGFile.unshift({\n\t\t\t\t\t\tMime: file.type.toString(),\n\t\t\t\t\t\tExtention: file.name.split(\".\")[1].toString(),\n\t\t\t\t\t\tLength: file.size.toString(),\n\t\t\t\t\t\tNameFile: file.name.toString(),\n\t\t\t\t\t\tContent: reader.result.split(\",\")[1].toString()\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < oEvent.getParameter(\"files\").length; i++) {\n\t\t\t\tvar oFileTemp = oEvent.getParameter(\"files\")[i];\n\t\t\t\tif (uploadAttachment.getItems().length > 0) {\n\t\t\t\t\tfor (var j = 0; j < uploadAttachment.getItems().length; j++) {\n\t\t\t\t\t\tif (oFileTemp.name === uploadAttachment.getItems()[j].getProperty(\"fileName\")) {\n\t\t\t\t\t\t\t// Do nothing. Same name file is not allow\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgetFileInfo(oFileTemp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tgetFileInfo(oFileTemp);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonUploadComplete: function(oEvent) {\n\t\t\tvar oUploadCollection = this.byId(\"UploadCollection\");\n\t\t\tvar oData = oUploadCollection.getModel().getData();\n\t\t\tvar sfileName = oEvent.getParameter(\"files\")[0].fileName;\n\t\t\t// at the moment parameter fileName is not set in IE9\n\t\t\tif (!sfileName) {\n\t\t\t\tvar aUploadedFile = (oEvent.getParameters().getSource().getProperty(\"value\")).split(/\\\" \"/);\n\t\t\t\tsfileName = aUploadedFile[0];\n\t\t\t}\n\t\t\t// Check same file name\n\t\t\tfor (var j = 0; j < oUploadCollection.getItems().length; j++) {\n\t\t\t\tif (sfileName === oUploadCollection.getItems()[j].getProperty(\"fileName\")) {\n\t\t\t\t\tMessageBox.error(this._oResourceBundle.getText(\"msg_same_file_error\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\toData.items.unshift({\n\t\t\t\t\"fileName\": sfileName,\n\t\t\t\t\"documentId\": jQuery.now().toString()\n\t\t\t});\n\t\t\tthis.getView().getModel().refresh();\n\t\t\tthis.byId(\"attachmentTitle\").setText(this.getAttachmentTitleText());\n\t\t},\n\n\t\tonBeforeUploadStarts: function(oEvent) {\n\t\t\t// Header Slug\n\t\t\tvar oCustomerHeaderSlug = new UploadCollectionParameter({\n\t\t\t\tname: \"slug\",\n\t\t\t\tvalue: oEvent.getParameter(\"fileName\")\n\t\t\t});\n\t\t\toEvent.getParameters().addHeaderParameter(oCustomerHeaderSlug);\n\t\t},\n\n\t\tonUploadTerminated: function() {\n\n\t\t},\n\n\t\tonFileTypeChange: function(oEvent) {\n\t\t\tthis.byId(\"UploadCollection\").setFileType(oEvent.getSource().getSelectedKeys());\n\t\t},\n\n\t\tonSelectAllPress: function(oEvent) {\n\t\t\tvar oUploadCollection = this.byId(\"UploadCollection\");\n\t\t\tif (!oEvent.getSource().getPressed()) {\n\t\t\t\tthis.deselectAllItems(oUploadCollection);\n\t\t\t\toEvent.getSource().setPressed(false);\n\t\t\t\toEvent.getSource().setText(\"Select all\");\n\t\t\t} else {\n\t\t\t\tthis.deselectAllItems(oUploadCollection);\n\t\t\t\toUploadCollection.selectAll();\n\t\t\t\toEvent.getSource().setPressed(true);\n\t\t\t\toEvent.getSource().setText(\"Deselect all\");\n\t\t\t}\n\t\t\tthis.onSelectionChange(oEvent);\n\t\t},\n\n\t\tdeselectAllItems: function(oUploadCollection) {\n\t\t\tvar aItems = oUploadCollection.getItems();\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\n\t\t\t\toUploadCollection.setSelectedItem(aItems[i], false);\n\t\t\t}\n\t\t},\n\n\t\tgetAttachmentTitleText: function() {\n\t\t\tvar aItems = this.byId(\"UploadCollection\").getItems();\n\t\t\treturn \"Attachments (\" + aItems.length + \")\";\n\t\t},\n\n\t\tonModeChange: function(oEvent) {\n\t\t\tvar oSettingsModel = this.getView().getModel(\"settings\");\n\t\t\tif (oEvent.getParameters().selectedItem.getProperty(\"key\") === MobileLibrary.ListMode.MultiSelect) {\n\t\t\t\toSettingsModel.setProperty(\"/visibleEdit\", false);\n\t\t\t\toSettingsModel.setProperty(\"/visibleDelete\", false);\n\t\t\t\tthis.enableToolbarItems(true);\n\t\t\t} else {\n\t\t\t\toSettingsModel.setProperty(\"/visibleEdit\", true);\n\t\t\t\toSettingsModel.setProperty(\"/visibleDelete\", true);\n\t\t\t\tthis.enableToolbarItems(false);\n\t\t\t}\n\t\t},\n\n\t\tenableToolbarItems: function(status) {\n\t\t\tthis.byId(\"selectAllButton\").setVisible(status);\n\t\t\tthis.byId(\"deleteSelectedButton\").setVisible(status);\n\t\t\tthis.byId(\"selectAllButton\").setEnabled(status);\n\t\t\t// This is only enabled if there is a selected item in multi-selection mode\n\t\t\tif (this.byId(\"UploadCollection\").getSelectedItems().length > 0) {\n\t\t\t\tthis.byId(\"deleteSelectedButton\").setEnabled(true);\n\t\t\t}\n\t\t},\n\n\t\tonSelectionChange: function() {\n\t\t\tvar oUploadCollection = this.byId(\"UploadCollection\");\n\t\t\t// Only it is enabled if there is a selected item in multi-selection mode\n\t\t\tif (oUploadCollection.getMode() === MobileLibrary.ListMode.MultiSelect) {\n\t\t\t\tif (oUploadCollection.getSelectedItems().length > 0) {\n\t\t\t\t\tthis.byId(\"deleteSelectedButton\").setEnabled(true);\n\t\t\t\t} else {\n\t\t\t\t\tthis.byId(\"deleteSelectedButton\").setEnabled(false);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonOpenAppSettings: function(oEvent) {\n\t\t\tif (!this.oSettingsDialog) {\n\t\t\t\tthis.oSettingsDialog = sap.ui.xmlfragment(\"sap.m.sample.UploadCollection.AppSettings\", this);\n\t\t\t\tthis.getView().addDependent(this.oSettingsDialog);\n\t\t\t}\n\t\t\tjQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), this.oSettingsDialog);\n\t\t\tthis.oSettingsDialog.open();\n\t\t},\n\n\t\tonDialogCloseButton: function() {\n\t\t\tthis.oSettingsDialog.close();\n\t\t},\n\n\t\tonSave: function(oEvent) {\n\t\t\tvar that = this;\n\t\t\tvar sUrl = \"/sap/opu/odata/sap/ZODATA_FIORI_SOL_SRV/\";\n\t\t\tvar oDataModel = new sap.ui.model.odata.v2.ODataModel(sUrl, {\n\t\t\t\tjson: true,\n\t\t\t\tloadMetadataAsync: true\n\t\t\t});\n\t\t\tvar oEntry = {};\n\n\t\t\tvar transactionType = this.getView().byId(\"incident\").getSelectedKey();\n\t\t\tvar transactionTypeText = this.getView().byId(\"incident\").getSelectedItem().getText();\n\t\t\tvar description = this.getView().byId(\"description\").getValue();\n\t\t\tvar priority = this.getView().byId(\"priority\").getSelectedKey();\n\t\t\tvar impact = this.getView().byId(\"impact\").getSelectedKey();\n\t\t\tvar requestedStart = this.getView().byId(\"requested_start\").getValue();\n\t\t\tvar textDescription = this.getView().byId(\"text_description\").getValue();\n\t\t\tvar comment = this.getView().byId(\"comment\").getValue();\n\n\t\t\t// Description is required\n\t\t\tif (description === \"\") {\n\t\t\t\tMessageBox.warning(this._oResourceBundle.getText(\"description_required\"));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toEntry.TransactionType = transactionType;\n\t\t\toEntry.Description = description;\n\t\t\toEntry.Priority = priority;\n\t\t\toEntry.Impact = impact;\n\t\t\toEntry.RequestedStart = requestedStart;\n\t\t\toEntry.TextDescription = textDescription;\n\t\t\toEntry.Comment = comment;\n\t\t\toEntry.ToAttachSet = GFile;\n\t\t\tvar route = sap.ui.core.UIComponent.getRouterFor(this);\n\n\t\t\tsap.ui.core.BusyIndicator.show();\n\t\t\toDataModel.create(\"/ItemSet\", oEntry, {\n\t\t\t\tsuccess: function(oData, response) {\n\t\t\t\t\tsap.ui.core.BusyIndicator.hide();\n\t\t\t\t\tif (oData.TicketId !== \"\") {\n\t\t\t\t\t\tthat._resetDefaultVal();\n\t\t\t\t\t\tMessageBox.success(that._oResourceBundle.getText(\"msg_create_ticket_success\", transactionTypeText), {\n\t\t\t\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\t\t\t\troute.navTo(\"edit\", {\n\t\t\t\t\t\t\t\t\tGuid: encodeURIComponent(oData.Guid)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tMessageBox.success(that._oResourceBundle.getText(\"msg_create_ticket_error\", transactionTypeText));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: function(oError) {\n\t\t\t\t\tsap.ui.core.BusyIndicator.hide();\n\t\t\t\t\tMessageBox.error(oError.statusText);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_resetDefaultVal: function() {\n\t\t\tvar oView = this.getView();\n\t\t\toView.byId(\"incident\").setSelectedKey(\"ZMIN\");\n\t\t\tthis.getView().byId(\"page\").setTitle(\"Create \" + oView.byId(\"incident\").getSelectedItem().getText());\n\t\t\toView.byId(\"priority\").setSelectedKey(\"1\");\n\t\t\toView.byId(\"impact\").setSelectedKey(\"CA_1\");\n\t\t\toView.byId(\"description\").setValue(\"\");\n\t\t\toView.byId(\"requested_start\").setValue(\"\");\n\t\t\toView.byId(\"text_description\").setValue(\"\");\n\t\t\toView.byId(\"comment\").setValue(\"\");\n\t\t\tGFile = [];\n\t\t\tvar data = {\n\t\t\t\t\"items\": []\n\t\t\t};\n\t\t\tthis.getView().setModel(new JSONModel(data));\n\t\t},\n\t\t\n\t\tonChangeIncident: function(oEvent) {\n\t\t\tthis.getView().byId(\"page\").setTitle(\"Create \" + oEvent.getSource().getSelectedItem().getText());\n\t\t}\n\t});\n\n});",
		"solman/controller/ListSelector.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/m/GroupHeaderListItem\"\n], function(BaseObject, GroupHeaderListItem) {\n\t\"use strict\";\n\n\treturn BaseObject.extend(\"solman.model.ListSelector\", {\n\n\t\t/**\n\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\n\t\t * function.\n\t\t * @class\n\t\t * @public\n\t\t * @alias solman.model.ListSelector\n\t\t */\n\n\t\tconstructor: function() {\n\t\t\tthis._oWhenListHasBeenSet = new Promise(function(fnResolveListHasBeenSet) {\n\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\n\t\t\t}.bind(this));\n\t\t\t// This promise needs to be created in the constructor, since it is allowed to\n\t\t\t// invoke selectItem functions before calling setBoundMasterList\n\t\t\tthis.oWhenListLoadingIsDone = new Promise(function(fnResolve, fnReject) {\n\t\t\t\t// Used to wait until the setBound masterList function is invoked\n\t\t\t\tthis._oWhenListHasBeenSet\n\t\t\t\t\t.then(function(oList) {\n\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\n\t\t\t\t\t\t\tfunction(oData) {\n\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\n\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\tlist: oList,\n\t\t\t\t\t\t\t\t\t\terror: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\n\t\t\t\t\t\t\t\tif (oFirstListItem) {\n\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\n\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\n\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\n\t\t\t\t\t\t\t\t\tfnResolve({\n\t\t\t\t\t\t\t\t\t\tlist: oList,\n\t\t\t\t\t\t\t\t\t\tfirstListitem: oFirstListItem\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// No items in the list\n\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\tlist: oList,\n\t\t\t\t\t\t\t\t\t\terror: false\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\n\t\t * May only be invoked once per ListSelector instance.\n\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\n\t\t * @public\n\t\t */\n\t\tsetBoundMasterList: function(oList) {\n\t\t\tthis._oList = oList;\n\t\t\tthis._fnResolveListHasBeenSet(oList);\n\t\t},\n\n\t\t/**\n\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\n\t\t * no selection/scrolling will happen\n\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\n\t\t * @public\n\t\t */\n\t\tselectAListItem: function(sBindingPath) {\n\n\t\t\tthis.oWhenListLoadingIsDone.then(\n\t\t\t\tfunction() {\n\t\t\t\t\tvar oList = this._oList,\n\t\t\t\t\t\toSelectedItem;\n\n\t\t\t\t\tif (oList.getMode() === \"None\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\toSelectedItem = oList.getSelectedItem();\n\n\t\t\t\t\t// skip update if the current selection is already matching the object path\n\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\toList.getItems().some(function(oItem) {\n\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\toList.setSelectedItem(oItem);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}.bind(this),\n\t\t\t\tfunction() {\n\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath +\n\t\t\t\t\t\t\" because the list encountered an error or had no items\");\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* Convenience Functions for List Selection Change Event       */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\n\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\n\t\t * is called.\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t * @param {function} oListener the listener object\n\t\t * @return {solman.model.ListSelector} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tattachListSelectionChange: function(fnFunction, oListener) {\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\n\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\n\t\t\t}.bind(this));\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\n\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\n\t\t * is called.\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t * @param {function} oListener the listener object\n\t\t * @return {solman.model.ListSelector} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tdetachListSelectionChange: function(fnFunction, oListener) {\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\n\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\n\t\t\t}.bind(this));\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Removes all selections from master list.\n\t\t * Does not trigger 'selectionChange' event on master list, though.\n\t\t * @public\n\t\t */\n\t\tclearMasterListSelection: function() {\n\t\t\t//use promise to make sure that 'this._oList' is available\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\n\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Find the next valid list item from the master list after the current.\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tfindNextItem: function(sCurrentPath) {\n\t\t\tvar aItems = this._oList.getItems();\n\t\t\tvar iItemsCount = aItems.length;\n\t\t\tif (iItemsCount === 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (iItemsCount > 0) {\n\t\t\t\tvar bFound = false;\n\t\t\t\tfor (var i = 0; i < iItemsCount; i++) {\n\t\t\t\t\tvar oItem = aItems[i];\n\t\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\n\t\t\t\t\t\tvar oCtx = oItem.getBindingContext(),\n\t\t\t\t\t\t\tsPath = oCtx.getPath();\n\t\t\t\t\t\tbFound = sPath === sCurrentPath;\n\t\t\t\t\t\tif (bFound) {\n\t\t\t\t\t\t\tif (i === iItemsCount - 1) { //the current item is the last but not the only one\n\t\t\t\t\t\t\t\treturn aItems[0];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn aItems[i + 1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!bFound) {\n\t\t\t\t\treturn null; //not valid\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Find the list item from a path.\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tfindListItem: function(sPath) {\n\t\t\tvar aItems = this._oList.getItems();\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\n\t\t\t\tvar oItem = aItems[i];\n\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\n\t\t\t\t\tvar oCtx = oItem.getBindingContext();\n\t\t\t\t\tvar bFound = sPath === oCtx.getPath();\n\t\t\t\t\tif (bFound) {\n\t\t\t\t\t\treturn oItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null; //not found\n\t\t},\n\t\t/**\n\t\t * Find the first list item\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tfindFirstItem: function() {\n\t\t\tvar aItems = this._oList.getItems();\n\t\t\tif (aItems && aItems.length > 0) {\n\t\t\t\treturn aItems[0];\n\t\t\t}\n\t\t\treturn null; //not found\n\t\t}\n\t});\n\n});",
		"solman/controller/Detail.controller.js": "/*global location */\nsap.ui.define([\n\t\"solman/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"solman/model/formatter\",\n\t\"sap/m/MessageBox\",\n\t\"sap/m/MessageToast\"\n], function(BaseController, JSONModel, formatter, MessageBox, MessageToast) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"solman.controller.Detail\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\tonInit: function() {\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t// between the busy indication for loading the view's meta data\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0,\n\t\t\t\tlineItemListTitle: this.getResourceBundle().getText(\"detailLineItemTableHeading\")\n\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\t\t\tthis.setModel(oViewModel, \"detailView\");\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareEmailPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\tnull,\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Event handler when the share in JAM button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareInJamPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tobject: {\n\t\t\t\t\t\t\tid: location.href,\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\toShareDialog.open();\n\t\t},\n\n\t\t/**\n\t\t * Updates the item count within the line item table's header\n\t\t * @param {object} oEvent an event containing the total number of items in the list\n\t\t * @private\n\t\t */\n\t\tonListUpdateFinished: function(oEvent) {\n\t\t\tvar sTitle,\n\t\t\t\tiTotalItems = oEvent.getParameter(\"total\"),\n\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\t// only update the counter if the length is final\n\t\t\tif (this.byId(\"lineItemsList\").getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tif (iTotalItems) {\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\n\t\t\t\t} else {\n\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\n\t\t\t\t}\n\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view delete button. Deletes the selected item. \n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonDelete: function() {\n\t\t\tvar that = this;\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\tsPath = oViewModel.getProperty(\"/sObjectPath\"),\n\t\t\t\tsObjectHeader = this._oODataModel.getProperty(sPath + \"/Attachment\"),\n\t\t\t\tsQuestion = this._oResourceBundle.getText(\"deleteText\", sObjectHeader),\n\t\t\t\tsSuccessMessage = this._oResourceBundle.getText(\"deleteSuccess\", sObjectHeader);\n\n\t\t\tvar fnMyAfterDeleted = function() {\n\t\t\t\tMessageToast.show(sSuccessMessage);\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\tvar oNextItemToSelect = that.getOwnerComponent().oListSelector.findNextItem(sPath);\n\t\t\t\tthat.getModel(\"appView\").setProperty(\"/itemToSelect\", oNextItemToSelect.getBindingContext().getPath()); //save last deleted\n\t\t\t};\n\t\t\tthis._confirmDeletionByUser({\n\t\t\t\tquestion: sQuestion\n\t\t\t}, [sPath], fnMyAfterDeleted);\n\t\t},\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view edit button. Open a view to enable the user update the selected item. \n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonEdit: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\n\t\t\tvar sObjectPath = this.getView().getElementBinding().getPath();\n\t\t\tthis.getRouter().getTargets().display(\"create\", {\n\t\t\t\tmode: \"update\",\n\t\t\t\tobjectPath: sObjectPath\n\t\t\t});\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* begin: internal methods                                     */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t * @private\n\t\t */\n\t\t_onObjectMatched: function(oEvent) {\n\t\t\tvar oParameter = oEvent.getParameter(\"arguments\");\n\t\t\tfor (var value in oParameter) {\n\t\t\t\toParameter[value] = decodeURIComponent(oParameter[value]);\n\t\t\t}\n\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"ItemSet\", oParameter);\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t * @function\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t * @private\n\t\t */\n\t\t_bindView: function(sObjectPath) {\n\t\t\t// Set busy indicator during view binding\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\toViewModel.setProperty(\"/busy\", false);\n\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Event handler for binding change event\n\t\t * @function\n\t\t * @private\n\t\t */\n\n\t\t_onBindingChange: function() {\n\t\t\tvar oView = this.getView(),\n\t\t\t\toElementBinding = oView.getElementBinding(),\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\toAppViewModel = this.getModel(\"appView\");\n\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t// does not make sense anymore.\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sPath = oElementBinding.getBoundContext().getPath(),\n\t\t\t\toResourceBundle = this.getResourceBundle(),\n\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\tsObjectId = oObject.Id,\n\t\t\t\tsObjectName = oObject.Attachment;\n\n\t\t\toViewModel.setProperty(\"/sObjectId\", sObjectId);\n\t\t\toViewModel.setProperty(\"/sObjectPath\", sPath);\n\t\t\toAppViewModel.setProperty(\"/itemToSelect\", sPath);\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\n\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\t\t},\n\n\t\t/**\n\t\t * Event handler for metadata loaded event\n\t\t * @function\n\t\t * @private\n\t\t */\n\n\t\t_onMetadataLoaded: function() {\n\t\t\t// Store original busy indicator delay for the detail view\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\toLineItemTable = this.byId(\"lineItemsList\"),\n\t\t\t\tiOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\n\n\t\t\t// Make sure busy indicator is displayed immediately when\n\t\t\t// detail view is displayed for the first time\n\t\t\toViewModel.setProperty(\"/delay\", 0);\n\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", 0);\n\n\t\t\toLineItemTable.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t// Restore original busy indicator delay for line item table\n\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\n\t\t\t});\n\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t// Restore original busy indicator delay for the detail view\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\n\t\t},\n\n\t\t/**\n\t\t * Opens a dialog letting the user either confirm or cancel the deletion of a list of entities\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\n\t\t * title (optional) may be a string defining the title of the popup.\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done. \n\t\t * @param {callback} fnDeleteCanceled (optional) - called when the user decides not to perform the deletion\n\t\t * @param {callback} fnDeleteConfirmed (optional) - called when the user decides to perform the deletion. A Promise will be passed\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t/* eslint-disable */ // using more then 4 parameters for a function is justified here\n\t\t_confirmDeletionByUser: function(oConfirmation, aPaths, fnAfterDeleted, fnDeleteCanceled, fnDeleteConfirmed) {\n\t\t\t/* eslint-enable */\n\t\t\t// Callback function for when the user decides to perform the deletion\n\t\t\tvar fnDelete = function() {\n\t\t\t\t// Calls the oData Delete service\n\t\t\t\tthis._callDelete(aPaths, fnAfterDeleted);\n\t\t\t}.bind(this);\n\n\t\t\t// Opens the confirmation dialog\n\t\t\tMessageBox.show(oConfirmation.question, {\n\t\t\t\ticon: oConfirmation.icon || MessageBox.Icon.WARNING,\n\t\t\t\ttitle: oConfirmation.title || this._oResourceBundle.getText(\"delete\"),\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\n\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\n\t\t\t\t\t\tfnDelete();\n\t\t\t\t\t} else if (fnDeleteCanceled) {\n\t\t\t\t\t\tfnDeleteCanceled();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Performs the deletion of a list of entities.\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done. \n\t\t * @return a Promise that will be resolved as soon as the deletion process ended successfully.\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_callDelete: function(aPaths, fnAfterDeleted) {\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\tvar fnFailed = function() {\n\t\t\t\tthis._oODataModel.setUseBatch(true);\n\t\t\t}.bind(this);\n\t\t\tvar fnSuccess = function() {\n\t\t\t\tif (fnAfterDeleted) {\n\t\t\t\t\tfnAfterDeleted();\n\t\t\t\t\tthis._oODataModel.setUseBatch(true);\n\t\t\t\t}\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t}.bind(this);\n\t\t\treturn this._deleteOneEntity(aPaths[0], fnSuccess, fnFailed);\n\t\t},\n\n\t\t/**\n\t\t * Deletes the entity from the odata model\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnSuccess - Event handler for success operation.\n\t\t * @param {callback} fnFailed - Event handler for failure operation.\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_deleteOneEntity: function(sPath, fnSuccess, fnFailed) {\n\t\t\tvar oPromise = new Promise(function(fnResolve, fnReject) {\n\t\t\t\tthis._oODataModel.setUseBatch(false);\n\t\t\t\tthis._oODataModel.remove(sPath, {\n\t\t\t\t\tsuccess: fnResolve,\n\t\t\t\t\terror: fnReject,\n\t\t\t\t\tasync: true\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t\toPromise.then(fnSuccess, fnFailed);\n\t\t\treturn oPromise;\n\t\t}\n\n\t});\n});",
		"solman/controller/BaseController.js": "/*global history */\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/core/routing/History\"\n], function(Controller, History) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"solman.controller.BaseController\", {\n\t\t/**\n\t\t * Convenience method for accessing the router in every controller of the application.\n\t\t * @public\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t */\n\t\tgetRouter: function() {\n\t\t\treturn this.getOwnerComponent().getRouter();\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the view model by name in every controller of the application.\n\t\t * @public\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t */\n\t\tgetModel: function(sName) {\n\t\t\treturn this.getView().getModel(sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for setting the view model in every controller of the application.\n\t\t * @public\n\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t */\n\t\tsetModel: function(oModel, sName) {\n\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the resource bundle.\n\t\t * @public\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t */\n\t\tgetResourceBundle: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t},\n\n\t\t/**\n\t\t * Event handler  for navigating back.\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\n\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t * @public\n\t\t */\n\t\tonNavBack: function() {\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\n\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\t// Otherwise we go backwards with a forward history\n\t\t\t\tvar bReplace = true;\n\t\t\t\tthis.getRouter().navTo(\"master\", {}, bReplace);\n\t\t\t}\n\t\t}\n\n\t});\n\n});",
		"solman/view/DetailObjectNotFound.view.xml": "<mvc:View controllerName=\"solman.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>detailTitle}\" text=\"{i18n>noObjectFoundText}\" icon=\"{sap-icon://product}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"solman/view/CreateEntity.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:l=\"sap.ui.layout\"\n\txmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:smart=\"sap.ui.comp.smartfield\" xmlns=\"sap.m\"\n\tcontrollerName=\"solman.controller.CreateEntity\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" title=\"Create Incident\" busy=\"{viewModel>/busy}\" showNavButton=\"true\">\n\t\t<semantic:content>\n\t\t\t<sap.ui.layout:Grid xmlns:sap.ui.layout=\"sap.ui.layout\" id=\"grid_header\" defaultSpan=\"XL12 L12 M12 S12\" width=\"100%\" containerQuery=\"false\"\n\t\t\t\thSpacing=\"0.5\" position=\"Center\" vSpacing=\"0\" visible=\"true\">\n\t\t\t\t<sap.ui.layout:content>\n\t\t\t\t\t<Bar>\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<Label text=\"Incident\" design=\"Bold\" labelFor=\"incident\"/>\n\t\t\t\t\t\t\t<Select xmlns:sap.ui.core=\"sap.ui.core\" change=\"onChangeIncident\" selectedKey=\"ZMIN\" id=\"incident\" class=\"sapUiTinyMarginBegin\" forceSelection=\"false\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Incident\" key=\"ZMIN\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Service Request\" key=\"ZMRQ\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Complaint\" key=\"ZMCO\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t</Bar>\n\t\t\t\t</sap.ui.layout:content>\n\t\t\t</sap.ui.layout:Grid>\n\t\t\t<sap.ui.layout:Grid xmlns:sap.ui.layout=\"sap.ui.layout\" id=\"grid_content\" defaultSpan=\"XL12 L12 M12 S12\" width=\"100%\" containerQuery=\"false\"\n\t\t\t\thSpacing=\"0\" position=\"Center\" vSpacing=\"0\" visible=\"true\">\n\t\t\t\t<sap.ui.layout:content>\n\t\t\t\t\t<!-- START form Description -->\n\t\t\t\t\t<f:SimpleForm class=\"editableForm\" title=\"Description\" columnsL=\"2\" columnsM=\"2\" editable=\"true\" id=\"form_information\"\n\t\t\t\t\t\tlayout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<!-- START Description -->\n\t\t\t\t\t\t\t<Label text=\"Description\" required=\"true\" labelFor=\"description\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t<Input name=\"description\" maxLength=\"255\" id=\"description\" required=\"true\" placeholder=\"Description\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t<!-- END Description -->\n\t\t\t\t\t\t\t<!-- START Impact -->\n\t\t\t\t\t\t\t<Label text=\"Impact\" required=\"true\" labelFor=\"impact\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t<Select xmlns:sap.ui.core=\"sap.ui.core\" selectedKey=\"CA_1\" id=\"impact\" forceSelection=\"false\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Disaster\" key=\"CA_1\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"High\" key=\"CA_2\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Medium\" key=\"CA_3\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Low\" key=\"CA_4\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"None \" key=\"CA_5\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<!-- END Impact -->\n\t\t\t\t\t\t\t<!-- START Priority -->\n\t\t\t\t\t\t\t<Label text=\"Priority\" required=\"true\" labelFor=\"priority\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t<Select xmlns:sap.ui.core=\"sap.ui.core\" selectedKey=\"1\" id=\"priority\" forceSelection=\"false\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Very high\" key=\"1\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"High\" key=\"2\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Medium\" key=\"3\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Low\" key=\"4\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<!-- END Priority -->\n\t\t\t\t\t\t\t<!-- START Requested Start -->\n\t\t\t\t\t\t\t<Label text=\"Requested Start\" labelFor=\"requested_start\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t<DateTimePicker class=\"disableTextBox\" name=\"requested_start\" id=\"requested_start\" displayFormat=\"dd/MM/yyyy HH:mm:ss\" valueFormat=\"yyyyMMddHHmmss\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</DateTimePicker>\n\t\t\t\t\t\t\t<!-- END Requested Start -->\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<!-- END form Description -->\n\t\t\t\t\t<!-- START form Text Description -->\n\t\t\t\t\t<f:SimpleForm class=\"editableForm\" title=\"Text Description\" columnsL=\"2\" columnsM=\"2\" editable=\"true\" id=\"form_text_description\"\n\t\t\t\t\t\tlayout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<TextArea rows=\"8\" id=\"text_description\" placeholder=\"Enter a Detailed description of your incident...\"/>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<!-- END form Text Description -->\n\t\t\t\t\t<!-- START Attachments -->\n\t\t\t\t\t<UploadCollection sameFilenameAllowed=\"false\" id=\"UploadCollection\" maximumFilenameLength=\"{settings>/maximumFilenameLength}\"\n\t\t\t\t\t\tmaximumFileSize=\"{settings>/maximumFileSize}\" multiple=\"true\" change=\"onUpload\" fileDeleted=\"onFileDeleted\"\n\t\t\t\t\t\tfilenameLengthExceed=\"onFilenameLengthExceed\" fileRenamed=\"onFileRenamed\" fileSizeExceed=\"onFileSizeExceed\" fileType=\"{fileTypes>/selected}\"\n\t\t\t\t\t\tselectionChange=\"onSelectionChange\" typeMissmatch=\"onTypeMissmatch\" uploadComplete=\"onUploadComplete\"\n\t\t\t\t\t\tbeforeUploadStarts=\"onBeforeUploadStarts\" uploadTerminated=\"onUploadTerminated\" items=\"{ path: '/items', templateShareable: false }\"\n\t\t\t\t\t\tnumberOfAttachmentsText=\"Attachments\" showSeparators=\"{settings>/showSeparators}\" uploadEnabled=\"{settings>/uploadEnabled}\"\n\t\t\t\t\t\tuploadButtonInvisible=\"{settings>/uploadButtonVisible}\" mode=\"{settings>/mode}\">\n\t\t\t\t\t\t<toolbar>\n\t\t\t\t\t\t\t<OverflowToolbar id=\"myId\">\n\t\t\t\t\t\t\t\t<Title id=\"attachmentTitle\"/>\n\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t<UploadCollectionToolbarPlaceholder/>\n\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t</toolbar>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<UploadCollectionItem id=\"UploadCollectionItem\" \n\t\t\t\t\t\t\t\tfileName=\"{fileName}\"\n\t\t\t\t\t\t\t\tdocumentId=\"{documentId}\"\n\t\t\t\t\t\t\t\tenableEdit=\"false\" enableDelete=\"true\" visibleDelete=\"true\"\n\t\t\t\t\t\t\t\tvisibleEdit=\"false\">\n\t\t\t\t\t\t\t</UploadCollectionItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</UploadCollection>\n\t\t\t\t\t<!-- END Attachments -->\n\t\t\t\t\t<!-- START Comment -->\n\t\t\t\t\t<f:SimpleForm class=\"editableForm\" title=\"Comment\" visible=\"false\" columnsL=\"2\" columnsM=\"2\" editable=\"true\" id=\"form_comment\" layout=\"ResponsiveGridLayout\"\n\t\t\t\t\t\tmaxContainerCols=\"2\" minWidth=\"1024\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<TextArea rows=\"8\" id=\"comment\" visible=\"false\" placeholder=\"Enter a Comment of your incident...\"/>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t<!-- END Comment -->\n\t\t\t\t</sap.ui.layout:content>\n\t\t\t</sap.ui.layout:Grid>\n\t\t</semantic:content>\n\t\t<semantic:saveAction>\n\t\t\t<semantic:SaveAction id=\"save\" press=\"onSave\"/>\n\t\t</semantic:saveAction>\n\t\t<semantic:cancelAction>\n\t\t\t<semantic:CancelAction id=\"cancel\" press=\"onCancel\"/>\n\t\t</semantic:cancelAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"solman/view/Detail.view.xml": "<mvc:View controllerName=\"solman.controller.Detail\" xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\"\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"{i18n>detailTitle}\"\n\t\tbusy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"{Attachment}\"></ObjectHeader>\n\t\t\t<IconTabBar id=\"iconTabBar\" class=\"sapUiResponsiveContentPadding\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter1\" icon=\"sap-icon://hint\" tooltip=\"{i18n>detailIconTabBarInfo}\"></IconTabFilter>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter2\" icon=\"sap-icon://attachment\" tooltip=\"{i18n>detailIconTabBarAttachments}\"></IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t\t<Table id=\"lineItemsList\" width=\"auto\" items=\"{ToAttachSet}\" updateFinished=\"onListUpdateFinished\"\n\t\t\t\tnoDataText=\"{i18n>detailLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\">\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar id=\"lineItemsToolbar\">\n\t\t\t\t\t\t<Title id=\"lineItemsHeader\" text=\"{detailView>/lineItemListTitle}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<Text text=\"{i18n>detailLineItemTableIDColumn}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Right\">\n\t\t\t\t\t\t<Text text=\"{i18n>detailLineItemTableUnitNumberColumn}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<ObjectIdentifier title=\"{}\" text=\"{}\"/>\n\t\t\t\t\t\t\t<ObjectNumber/>\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t</Table>\n\t\t</semantic:content>\n\t\t<semantic:editAction>\n\t\t\t<semantic:EditAction id=\"edit\" press=\"onEdit\"/>\n\t\t</semantic:editAction>\n\t\t<semantic:customFooterContent>\n\t\t\t<Button enabled=\"true\" id=\"deleteButton\" press=\"onDelete\" text=\"Delete\"/>\n\t\t</semantic:customFooterContent>\n\t\t<semantic:sendEmailAction>\n\t\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\n\t\t</semantic:sendEmailAction>\n\t\t<semantic:shareInJamAction>\n\t\t\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamActive}\" press=\"onShareInJamPress\"/>\n\t\t</semantic:shareInJamAction>\n\t\t<semantic:saveAsTileAction>\n\t\t\t<footerbar:AddBookmarkButton id=\"shareTile\" title=\"{detailView>/saveAsTileTitle}\"/>\n\t\t</semantic:saveAsTileAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"solman/view/App.view.xml": "<mvc:View controllerName=\"solman.controller.App\" xmlns:mvc=\"sap.ui.core.mvc\" displayBlock=\"true\" busy=\"{appView>/busy}\"\n\tbusyIndicatorDelay=\"{appView>/delay}\" xmlns=\"sap.m\">\n\t<!--<SplitApp id=\"idAppControl\"/>-->\n\t<App id=\"idAppControl\" busy=\"{appView>/busy}\" busyIndicatorDelay=\"{appView>/delay}\"/>\n</mvc:View>",
		"solman/view/Home.view.xml": "<mvc:View xmlns=\"sap.m\" xmlns:viz.feeds=\"sap.viz.ui5.controls.common.feeds\" xmlns:viz.data=\"sap.viz.ui5.data\" xmlns:l=\"sap.ui.layout\"\n\txmlns:viz=\"sap.viz.ui5.controls\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\"\n\txmlns:semantic=\"sap.m.semantic\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" controllerName=\"solman.controller.Home\">\n\t<semantic:DetailPage id=\"page\" title=\"Home Page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" showFooter=\"false\"\n\t\tshowSubHeader=\"false\">\n\t\t<semantic:content>\n\t\t\t<!--START My Message - Assign To Me -->\n\t\t\t<sap.ui.layout:Grid xmlns:sap.ui.layout=\"sap.ui.layout\" id=\"grid_1\" defaultSpan=\"XL12 L12 M12 S12\" width=\"100%\" containerQuery=\"false\"\n\t\t\t\thSpacing=\"0.5\" position=\"Center\" vSpacing=\"0.5\" visible=\"true\">\n\t\t\t\t<sap.ui.layout:content>\n\t\t\t\t\t<Bar>\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<Label text=\"My Messages\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<!--<Button enabled=\"true\" id=\"btn_edit\" press=\"onEdit\" text=\"Edit Ticket\" type=\"Emphasized\" tooltip=\"Edit Ticket\"/>-->\n\t\t\t\t\t\t\t<Button enabled=\"true\" id=\"btn_create\" press=\"onCreate\" text=\"{i18n>btn_create_ticket}\" type=\"Emphasized\" tooltip=\"{i18n>btn_create_ticket}\"/>\n\t\t\t\t\t\t\t<!--<Button enabled=\"true\" id=\"btn_myticket\" press=\"onMyTicket\" text=\"{i18n>btn_my_ticket}\" type=\"Emphasized\" tooltip=\"{i18n>btn_my_ticket}\"/>-->\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t\t<!--<Toolbar>-->\n\t\t\t\t\t<!--\t<Text id=\"txtSummaryAssign\" text=\"Result List: 44 Message Found, Last Refresh: 14.10.2019 10:47:09\"/>-->\n\t\t\t\t\t<!--</Toolbar>-->\n\t\t\t\t</sap.ui.layout:content>\n\t\t\t</sap.ui.layout:Grid>\n\t\t\t<sap.ui.layout:Grid xmlns:sap.ui.layout=\"sap.ui.layout\" id=\"grid_content\" defaultSpan=\"XL12 L12 M12 S12\" width=\"100%\" containerQuery=\"false\"\n\t\t\t\thSpacing=\"0\" position=\"Center\" vSpacing=\"0\" visible=\"true\">\n\t\t\t\t<sap.ui.layout:content>\n\t\t\t\t\t<!-- START form Description -->\n\t\t\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"2\" columnsM=\"2\" editable=\"true\" id=\"form_information\" layout=\"ResponsiveGridLayout\"\n\t\t\t\t\t\tmaxContainerCols=\"2\" minWidth=\"1024\">\n\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t<!-- START Transaction Type -->\n\t\t\t\t\t\t\t<Label text=\"Transaction Type\" labelFor=\"transaction_type\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t<Select xmlns:sap.ui.core=\"sap.ui.core\" selectedKey=\"all\" id=\"transaction_type\" forceSelection=\"false\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"All\" key=\"all\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Incident\" key=\"ZMIN\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Service Request\" key=\"ZMRQ\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Complaint\" key=\"ZMCO\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Request for Change\" key=\"ZNCR\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<!-- END Transaction Type -->\n\t\t\t\t\t\t\t<!-- START Start Date -->\n\t\t\t\t\t\t\t<Label text=\"(Requested start) From\" labelFor=\"date_from\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t<DatePicker displayFormat=\"dd/MM/yyyy\" valueFormat=\"yyyyMMdd\" id=\"date_from\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</DatePicker>\n\t\t\t\t\t\t\t<!-- END Start Date -->\n\t\t\t\t\t\t\t<!-- START Status -->\n\t\t\t\t\t\t\t<Label text=\"Status\" labelFor=\"status\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t<Select xmlns:sap.ui.core=\"sap.ui.core\" selectedKey=\"all\" id=\"status\" forceSelection=\"false\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"All\" key=\"all\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Open\" key=\"open\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Close\" key=\"close\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<!-- END Status -->\n\t\t\t\t\t\t\t<!-- START End Date -->\n\t\t\t\t\t\t\t<Label text=\"(Requested start) To\" labelFor=\"date_to\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t<DatePicker id=\"date_to\" displayFormat=\"dd/MM/yyyy\" valueFormat=\"yyyyMMdd\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</DatePicker>\n\t\t\t\t\t\t\t<!-- END End Date -->\n\t\t\t\t\t\t\t<!-- START Priority -->\n\t\t\t\t\t\t\t<Label text=\"Priority\" labelFor=\"priority\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t<Select xmlns:sap.ui.core=\"sap.ui.core\" selectedKey=\"all\" id=\"priority\" forceSelection=\"false\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"All\" key=\"all\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Very high\" key=\"1\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"High\" key=\"2\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Medium\" key=\"3\"/>\n\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"Low\" key=\"4\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<!-- END Priority -->\n\t\t\t\t\t\t\t<FlexBox width=\"auto\" class=\"sapUiTinyMarginTop\" direction=\"Inherit\" alignItems=\"Center\" justifyContent=\"End\" displayInline=\"true\"\n\t\t\t\t\t\t\t\twrap=\"Wrap\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<Button text=\"Search\" press=\"onSearch\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L12 M12\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t<FlexBox width=\"auto\" direction=\"Inherit\" alignItems=\"Center\" justifyContent=\"End\" displayInline=\"true\" wrap=\"Wrap\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<Text id=\"txtTotal\" text=\"Total: 0\" class=\"colorRed sapUiMediumMarginEnd\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"txtOpen\" text=\"Open: 0\" class=\"sapUiMediumMarginEnd\"/>\n\t\t\t\t\t\t\t\t\t<Text id=\"txtClose\" text=\"Close: 0\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L12 M12\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t</f:content>\n\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t</sap.ui.layout:content>\n\t\t\t</sap.ui.layout:Grid>\n\t\t\t<sap.ui.layout:Grid xmlns:sap.ui.layout=\"sap.ui.layout\" id=\"grid_2.2\" defaultSpan=\"XL6 L6 M6 S12\" width=\"100%\" containerQuery=\"false\"\n\t\t\t\thSpacing=\"0.5\" position=\"Center\" vSpacing=\"0\" visible=\"true\">\n\t\t\t\t<sap.ui.layout:content>\n\t\t\t\t\t<FlexBox width=\"auto\" id=\"flb_3\" direction=\"Inherit\" alignItems=\"Center\" alignContent=\"Start\" displayInline=\"true\" wrap=\"Wrap\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<Button enabled=\"true\" id=\"btn_refresh\" tooltip=\"Refresh\" press=\"onRefresh\" text=\"Refresh\" class=\"sapUiTinyMarginEnd\"/>\n\t\t\t\t\t\t\t<Switch id=\"switchRefresh\" change=\"onRefreshAuto\" tooltip=\"Auto refresh\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</FlexBox>\n\t\t\t\t\t<FlexBox width=\"auto\" id=\"flb_4\" direction=\"Inherit\" alignItems=\"Center\" displayInline=\"true\" wrap=\"Wrap\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<Label text=\"Filter:\" labelFor=\"search_field_assign\" design=\"Standard\" class=\"sapUiTinyMarginEnd sapUiVisibleOnlyOnDesktop\"/>\n\t\t\t\t\t\t\t<SearchField width=\"100%\" placeholder=\"Filter\" id=\"search_field_assign\" search=\"onSearch\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</FlexBox>\n\t\t\t\t</sap.ui.layout:content>\n\t\t\t</sap.ui.layout:Grid>\n\t\t\t<sap.ui.layout:Grid xmlns:sap.ui.layout=\"sap.ui.layout\" id=\"grid_result_list\" defaultSpan=\"XL12 L12 M12 S12\" width=\"100%\"\n\t\t\t\tcontainerQuery=\"false\" hSpacing=\"0.5\" position=\"Center\" vSpacing=\"0.5\" visible=\"true\">\n\t\t\t\t<sap.ui.layout:content>\n\t\t\t\t\t<Bar>\n\t\t\t\t\t\t<contentLeft>\n\t\t\t\t\t\t\t<Label id=\"txt_info\" text=\"\"/>\n\t\t\t\t\t\t</contentLeft>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<Button enabled=\"true\" tooltip=\"Add Ticket\" press=\"onCreate\" id=\"btn_add_ticket\" icon=\"sap-icon://add\"/>\n\t\t\t\t\t\t\t<Button enabled=\"true\" tooltip=\"Pie Chart\" press=\"onChartPie\" id=\"btn_chart\" icon=\"sap-icon://pie-chart\"/>\n\t\t\t\t\t\t\t<Button enabled=\"true\" tooltip=\"Table Personalization\" press=\"onPersoButtonPressed\" id=\"btn_split\" icon=\"sap-icon://action-settings\"/>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t</sap.ui.layout:content>\n\t\t\t</sap.ui.layout:Grid>\n\t\t\t<ScrollContainer height=\"200px\" vertical=\"true\">\n\t\t\t\t<Table id=\"table_list_ticket\" inset=\"false\" items=\"{/ItemSet}\" noDataText=\"No data\" fixedLayout=\"false\" showSeparators=\"All\" growing=\"false\"\n\t\t\t\t\tupdateFinished=\"onUpdateFinishedAlegation\" growingThreshold=\"5\" growingScrollToLoad=\"true\">\n\t\t\t\t\t<columns>\n\t\t\t\t\t\t<Column id=\"idCol\" vAlign=\"Middle\" minScreenWidth=\"Desktop\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\" visible=\"true\"\n\t\t\t\t\t\t\twidth=\"auto\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label text=\"ID\" id=\"lb_1\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"descriptionCol\" vAlign=\"Middle\" minScreenWidth=\"Desktop\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\"\n\t\t\t\t\t\t\twidth=\"auto\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label text=\"Description\" id=\"lb_2\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"requestedStartCol\" vAlign=\"Middle\" minScreenWidth=\"Desktop\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\"\n\t\t\t\t\t\t\tvisible=\"true\" width=\"auto\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label text=\"Requested start\" id=\"lb_3\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"priorityCol\" vAlign=\"Middle\" minScreenWidth=\"Desktop\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\"\n\t\t\t\t\t\t\twidth=\"auto\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label text=\"Priority \" id=\"lb_4\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"transactionTypeCol\" vAlign=\"Middle\" minScreenWidth=\"Desktop\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\"\n\t\t\t\t\t\t\tvisible=\"true\" width=\"auto\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label text=\"Transaction type\" id=\"lb_5\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"firstResponseCol\" vAlign=\"Middle\" minScreenWidth=\"Desktop\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\"\n\t\t\t\t\t\t\twidth=\"auto\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label text=\"First Response\" id=\"lb_6\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"dueByCol\" vAlign=\"Middle\" minScreenWidth=\"Desktop\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\"\n\t\t\t\t\t\t\tvisible=\"true\" width=\"auto\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label text=\"Due by\" id=\"lb_7\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"userStatusCol\" vAlign=\"Middle\" minScreenWidth=\"Desktop\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\"\n\t\t\t\t\t\t\twidth=\"auto\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label text=\"User status\" id=\"lb_8\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<Column id=\"personResponsibleCol\" vAlign=\"Middle\" minScreenWidth=\"Desktop\" demandPopin=\"true\" popinDisplay=\"Inline\" mergeDuplicates=\"false\"\n\t\t\t\t\t\t\twidth=\"auto\">\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<Label text=\"Person responsible\" id=\"lb_9\"/>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</columns>\n\t\t\t\t\t<items>\n\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t<Link press=\"onEdit\" text=\"{TicketId}\">\n\t\t\t\t\t\t\t\t\t<customData>\n\t\t\t\t\t\t\t\t\t\t<core:CustomData key=\"guid\" value=\"{Guid}\" writeToDom=\"true\"/>\n\t\t\t\t\t\t\t\t\t</customData>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t<Text text=\"{Description}\"/>\n\t\t\t\t\t\t\t\t<Text text=\"{RequestedStart}\"/>\n\t\t\t\t\t\t\t\t<Text text=\"{Priority}\"/>\n\t\t\t\t\t\t\t\t<Text text=\"{TransactionType}\"/>\n\t\t\t\t\t\t\t\t<Text text=\"{FirstResponseBy}\"/>\n\t\t\t\t\t\t\t\t<Text text=\"{DueBy}\"/>\n\t\t\t\t\t\t\t\t<Text text=\"{Status}\"/>\n\t\t\t\t\t\t\t\t<Text text=\"{MessProcess}\"/>\n\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t</items>\n\t\t\t\t</Table>\n\t\t\t</ScrollContainer>\n\t\t\t<sap.ui.layout:Grid xmlns:sap.ui.layout=\"sap.ui.layout\" id=\"grid_assign_sizing\" defaultSpan=\"XL12 L12 M12 S12\" width=\"100%\"\n\t\t\t\tcontainerQuery=\"false\" hSpacing=\"0.5\" position=\"Right\" vSpacing=\"0.5\" visible=\"true\">\n\t\t\t\t<sap.ui.layout:content>\n\t\t\t\t\t<Bar>\n\t\t\t\t\t\t<contentMiddle>\n\t\t\t\t\t\t\t<Button enabled=\"false\" tooltip=\"First page\" id=\"btn_first_page\" press=\"onFirstPage\" icon=\"sap-icon://close-command-field\"\n\t\t\t\t\t\t\t\ttype=\"Transparent\" text=\"First\"/>\n\t\t\t\t\t\t\t<Button enabled=\"false\" tooltip=\"Previous page\" id=\"btn_prev_page\" press=\"onPrevPage\" icon=\"sap-icon://navigation-left-arrow\"\n\t\t\t\t\t\t\t\ttype=\"Transparent\" text=\"Back\"/>\n\t\t\t\t\t\t\t<Button enabled=\"false\" tooltip=\"Next page\" id=\"btn_next_page\" press=\"onNextPage\" icon=\"sap-icon://navigation-right-arrow\"\n\t\t\t\t\t\t\t\ttype=\"Transparent\" text=\"Next\" iconFirst=\"false\"/>\n\t\t\t\t\t\t\t<Button enabled=\"false\" tooltip=\"Last page\" id=\"btn_last_page\" press=\"onLastPage\" icon=\"sap-icon://open-command-field\" type=\"Transparent\"\n\t\t\t\t\t\t\t\ttext=\"Last\" iconFirst=\"false\"/>\n\t\t\t\t\t\t</contentMiddle>\n\t\t\t\t\t\t<contentRight>\n\t\t\t\t\t\t\t<FlexBox width=\"auto\" id=\"flb_assign_page_size\" direction=\"Inherit\" alignItems=\"Center\" justifyContent=\"End\" wrap=\"Wrap\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<Label text=\"Maximum Number of Results:\" design=\"Standard\" class=\"sapUiTinyMarginEnd sapUiVisibleOnlyOnDesktop\"/>\n\t\t\t\t\t\t\t\t\t<Select xmlns:sap.ui.core=\"sap.ui.core\" selectedKey=\"25\" id=\"page_size\" forceSelection=\"false\" change=\"onChangePageSize\">\n\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"25\" key=\"25\"/>\n\t\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"50\" key=\"50\"/>\n\t\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"75\" key=\"75\"/>\n\t\t\t\t\t\t\t\t\t\t\t<sap.ui.core:ListItem text=\"100\" key=\"100\"/>\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t</contentRight>\n\t\t\t\t\t</Bar>\n\t\t\t\t</sap.ui.layout:content>\n\t\t\t</sap.ui.layout:Grid>\n\t\t\t<sap.ui.layout:Grid xmlns:sap.ui.layout=\"sap.ui.layout\" id=\"grid131\" defaultSpan=\"XL12 L12 M12 S12\" width=\"100%\" containerQuery=\"false\"\n\t\t\t\thSpacing=\"0.5\" position=\"Center\" vSpacing=\"0\" visible=\"true\">\n\t\t\t\t<sap.ui.layout:content>\n\t\t\t\t\t<viz:VizFrame id=\"oVizFrame\" visible=\"true\" vizProperties=\"{ title: {text : 'Chart Pie', visible : false}, \n\t\t\t\t\t\tplotArea:{ dataLabel:{ visible:true }}}\"\n\t\t\t\t\t\tuiConfig=\"{ 'applicationSet': 'fiori' }\" vizType=\"pie\" legendVisible=\"true\" width=\"100%\">\n\t\t\t\t\t\t<viz:dataset>\n\t\t\t\t\t\t\t<viz.data:FlattenedDataset data=\"{/results}\">\n\t\t\t\t\t\t\t\t<viz.data:dimensions>\n\t\t\t\t\t\t\t\t\t<viz.data:DimensionDefinition name=\"Status\" value=\"{Status}\"/>\n\t\t\t\t\t\t\t\t</viz.data:dimensions>\n\t\t\t\t\t\t\t\t<viz.data:measures>\n\t\t\t\t\t\t\t\t\t<viz.data:MeasureDefinition name=\"Count\" value=\"{Count}\"/>\n\t\t\t\t\t\t\t\t</viz.data:measures>\n\t\t\t\t\t\t\t</viz.data:FlattenedDataset>\n\t\t\t\t\t\t</viz:dataset>\n\t\t\t\t\t\t<viz:feeds>\n\t\t\t\t\t\t\t<viz.feeds:FeedItem uid=\"size\" type=\"Measure\" values=\"Count\"/>\n\t\t\t\t\t\t\t<viz.feeds:FeedItem uid=\"color\" type=\"Dimension\" values=\"Status\"/>\n\t\t\t\t\t\t</viz:feeds>\n\t\t\t\t\t\t<viz:layoutData>\n\t\t\t\t\t\t\t<l:GridData id=\"__data43\" span=\"L12 M12 S12\"/>\n\t\t\t\t\t\t</viz:layoutData>\n\t\t\t\t\t</viz:VizFrame>\n\t\t\t\t</sap.ui.layout:content>\n\t\t\t</sap.ui.layout:Grid>\n\t\t</semantic:content>\n\t</semantic:DetailPage>\n</mvc:View>",
		"solman/view/DetailNoObjectsAvailable.view.xml": "<mvc:View controllerName=\"solman.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>notAvailableViewTitle}\" text=\"{i18n>noObjectsAvailableText}\" icon=\"{sap-icon://product}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"solman/view/NotFound.view.xml": "<mvc:View controllerName=\"solman.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>notFoundTitle}\" text=\"{i18n>notFoundText}\" icon=\"{sap-icon://document}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>"
	}
});